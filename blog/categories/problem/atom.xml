<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: problem | Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/blog/categories/problem/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2014-04-10T11:33:49-07:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Capistrano 3 and rbenv sshkit upgrade to 1.3]]></title>
    <link href="http://tommytcchan.github.com/blog/2014/01/06/capistrano-3-and-rbenv-sshkit-upgrade-to-1-dot-3/"/>
    <updated>2014-01-06T17:02:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2014/01/06/capistrano-3-and-rbenv-sshkit-upgrade-to-1-dot-3</id>
    <content type="html"><![CDATA[<p>I spend a bit of time today figuring out why the capistrano rbenv gem doesn't work. First it was complaining that I had an older version of the sshkit library (it was being used by an older version of the fog library). Upgraded the fob library, but it was complaining of this:
<code>
cap aborted!
Unable to activate capistrano-rbenv-2.0.0, because sshkit-1.3.0 conflicts with sshkit (~&gt; 1.
2.0)
/home/tchan/repo/venuespot/Capfile:19:in `&lt;top (required)&gt;'
/home/tchan/.rvm/gems/ruby-2.0.0-p247@venuespot/gems/capistrano-3.0.1/lib/capistrano/applica
tion.rb:22:in `load_rakefile'
/home/tchan/.rvm/gems/ruby-2.0.0-p247@venuespot/gems/capistrano-3.0.1/lib/capistrano/applica
tion.rb:12:in `run'
</code></p>

<p>After digging through the commit history of the <a href="gem">https://github.com/capistrano/rbenv/pull/21/files</a> I realized it's a library version issue.</p>

<p>Uninstall the capistrano gem, then add this in your Gemfile (until the author bumps the version):</p>

<p>```</p>

<pre><code>gem 'capistrano-rbenv', :git =&gt; 'git@github.com:capistrano/rbenv.git', :ref =&gt; '67222bbce120323e422b051dcd167d8e2d3adbf0'
</code></pre>

<p>```</p>

<p>Hope that helps someone!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passenger]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/08/12/passenger/"/>
    <updated>2013-08-12T12:52:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/08/12/passenger</id>
    <content type="html"><![CDATA[<p>I'm setting up our beta site for <a href="http://venuespot.co">venuespot</a>, and one of the golden rules is that everything should be as close to the production site as possible.</p>

<p>Here are the instructions for how to use passenger with nginx and rails (3.2.11) on Ubuntu 12.10. I did read the docs but I found that it was missing a few things, so hopefully this tutorial will address your problems. See the section on Troubleshooting for more solutions to the problems I encountered.</p>

<h1>Introduction</h1>

<p>First, you will want to install passenger:
<code>
gem install passenger
</code>
(Optional). Then, you would want to get the latest rvm:
<code>
rvm get latest
rvm reload
</code></p>

<p>Now install nginx with the passenger mod:
<code>
rvmsudo passenger-install-nginx-module
(If the above fails, then you will need to update your rvm.)
</code>
Now get the libcurl (or whatever it tells you) library.
<code>
apt-get install libcurl4-openssl-dev
</code></p>

<p>Okay, we're at the halfway point. Next we should edit the nginx config file at <code>/opt/nginx/conf/nginx.conf</code>. Remove the original <code>server</code> block and add the following</p>

<p>```
server {</p>

<pre><code>listen 80;
server_name localhost;
root /yourwebapp/public; # &lt;--- be sure to point to 'public'!
passenger_enabled on;
</code></pre>

<p>}</p>

<p>passenger_pre_start http://localhost/;</p>

<p>```</p>

<p>Next, we need to make sure the nginx process can have 777 access to config.ru and make sure all the way up the path we have 777 as well.</p>

<p><code>
chmod 777 /yourwebapp
chmod 777 config.ru
</code></p>

<p>Now create the nginx init script:</p>

<p><code>
wget -O init-deb.sh http://library.linode.com/assets/1139-init-deb.sh
mv init-deb.sh /etc/init.d/nginx
chmod +x /etc/init.d/nginx
/usr/sbin/update-rc.d -f nginx defaults
</code></p>

<p>Now start the server:
<code>
/etc/init.d/nginx start
</code></p>

<p>There you have it folks! Navigate to localhost and you should see your site!</p>

<h1>Troubleshooting</h1>

<p>In the event that you don't see anything, you should check your logs in <code>/opt/nginx/logs</code> to ensure everything was done correctly.</p>

<p>For example, you might see this: <code>Error page:
Could not find amq-client-1.0.2 in any of the sources (Bundler::GemNotFound)</code></p>

<p>This means your gems have not been installed. Do a bundle install in your rails dir</p>

<p>Or, you might see somethign like this: <code>terminate called after throwing an instance of 'Passenger::FileSystemException'
  what():  Cannot stat '/yourwebapp/config.ru': Permission denied (errno=13)
</code></p>

<p>This means you need to set your permissions correctly for the whole path (see above).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: undefined method... after a migration script change]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/28/rails-undefined-method-dot-dot-dot-after-a-migration-script-change/"/>
    <updated>2013-03-28T21:56:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/28/rails-undefined-method-dot-dot-dot-after-a-migration-script-change</id>
    <content type="html"><![CDATA[<p>So I updated my model by changing the migration script and then doing <code>rake db:drop</code> and ```rake db:create```` and thought I would be okay. However, when I started my app after I changed the view layer, I got something like this:</p>

<p><code>
undefined method `command_name' for #&lt;Shortcut:0x00000003c3b4e8&gt;
</code></p>

<p>What gives? It turned out that I also needed to modify <code>schema.rb</code> to create the initial table. So that is a good place to check out if you find yourself changing the migration data.</p>
]]></content>
  </entry>
  
</feed>
