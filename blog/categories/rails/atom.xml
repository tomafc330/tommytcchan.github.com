<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-02-23T10:57:30-08:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Adding a public folder directory in rails.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/23/adding-a-public-folder-directory-in-rails/"/>
    <updated>2013-02-23T10:54:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/23/adding-a-public-folder-directory-in-rails</id>
    <content type="html"><![CDATA[<p>So I have this odd library that uses its own folder for assets and I don't feel like monkey patching it, so I had to find a way in Rails to expose another public directory. I came across the file <code>railties/lib/rails/engine/configuration.rb</code> which shows an example of how that's done for the standard public path setup:</p>

<p>```
 def paths</p>

<pre><code>...
      paths.public              "public"
      paths.public.javascripts  "public/javascripts"
      paths.public.stylesheets  "public/stylesheets"
      paths
    end
  end
</code></pre>

<p>...
```</p>

<p>So basically, in your routes.rb, add the custom public paths that you want with the above paths.</p>
]]></content>
  </entry>
  
</feed>
