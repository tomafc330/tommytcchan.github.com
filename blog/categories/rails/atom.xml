<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rails | Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-02-23T17:54:28-08:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails: create a deploy script with ease]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/23/rails-create-a-deploy-script-with-ease/"/>
    <updated>2013-02-23T16:51:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/23/rails-create-a-deploy-script-with-ease</id>
    <content type="html"><![CDATA[<p>I was finding myself having to deploy manually everytime I push something to github, so I've decided to write a deploy shell script to help with this task. Coming from a Java background, I found that creating a deploy script for rails is so much easier. Here is the meat of it:</p>

<p>In deploy.sh</p>

<p>```</p>

<h1>!/bin/bash</h1>

<h1>first kill the server if its running</h1>

<p>kill -9 <code>lsof -i :80 | awk '{if (NR!=1) {print $2}}'</code>
pushd ~/codetipdaily</p>

<h1>then pull from gh</h1>

<p>git pull origin master</p>

<h1>assets</h1>

<p>rake assets:clean
rake assets:precompile</p>

<h1>start server as daemon</h1>

<p>rails server -e production -p 80 --daemon
popd
```</p>

<p>That was a piece of cake!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: production environment is missing application.js and application.css]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/23/rails-production-environment-is-missing-application-dot-js-and-application-dot-css/"/>
    <updated>2013-02-23T16:03:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/23/rails-production-environment-is-missing-application-dot-js-and-application-dot-css</id>
    <content type="html"><![CDATA[<h3>The problem</h3>

<p>So I'm working on deploying my rails app to production, but I was seeing some weirdness when I ran it in production mode. Firstly, the application resources pointed to application.js and application.css even though my template was not change (ie. <code> &lt;%= stylesheet_link_tag    "application", :media =&gt; "all" %&gt;</code> and <code> &lt;%= javascript_include_tag "application" %&gt;</code>. That led to me believe something was wrong. In addition, when I ran <code>rake assets:precompile</code>, nothing was generated to the <code>public/assets</code> folder.</p>

<h3>What was wrong</h3>

<p>I checked my application.rb, and the <code>config.assets.enabled</code> was set to <code>true</code>. Then I realized that when I first created the app, I turned off that setting in <code>production.rb</code>. Simply turning it back on allowed the compilation of assets and leading rails to resolve to the right path (and not application.js/css).</p>
]]></content>
  </entry>
  
</feed>
