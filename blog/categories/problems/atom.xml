<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: problems | Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/blog/categories/problems/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-04-13T17:21:50-07:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Twitter Bootstrap: creating popovers - what a pain!]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/04/13/twitter-bootstrap-creating-popovers-what-a-pain/"/>
    <updated>2013-04-13T17:17:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/04/13/twitter-bootstrap-creating-popovers-what-a-pain</id>
    <content type="html"><![CDATA[<p>So I was troubleshooting the popover feature that bootstrap provides, and I must say that it is very buggy. I followed their tutorial but it didn't work until I put this in the beginning of my js:</p>

<p>```
$(document).ready(function () {</p>

<pre><code>$("*[rel=popover]")
    .popover({
        offset: 10,
        selector: '#map',
        placement: 'left'
    });
</code></pre>

<p>})
```</p>

<p>Why I needed to do this, I'm not sure but I think it's to initialize the popovers. Okay I was able to continue...however when it came time to destroy these popovers, I found that I wasn't able to do it with the their examples, ie: <code>$('#element').popover('destroy')</code>. Tried to figure it some more, but ran out of time...at the end of the day I just used good ol' jQuery do help me do it:</p>

<p>```</p>

<pre><code>        removeRepeatKeysPopovers: function() {
            $(".learning-popover").remove();
            $(".popover.left").remove();
        },
        removeAllPopovers: function () {
            this.removeRepeatKeysPopovers();
            $(".popover").remove();
        },
</code></pre>

<p>```</p>

<p>What a freakin pain!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grails: at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/04/12/grails-at-org-dot-apache-dot-tools-dot-ant-dot-unknownelement-dot-execute-unknownelement-dot-java-291/"/>
    <updated>2013-04-12T15:10:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/04/12/grails-at-org-dot-apache-dot-tools-dot-ant-dot-unknownelement-dot-execute-unknownelement-dot-java-291</id>
    <content type="html"><![CDATA[<p>So I was having this issue with my Grails upgrade from 2.0.0 to 2.1.4:</p>

<p><code>
NullPointerException
at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:291)
</code></p>

<p>I was like what's going on here? There isn't really any indications, so I had to use <code>git bisect</code> to see when I introduced the problem. Turns out (I don't have an explaination for this) that one of my tablib closures had an extra <code>-&gt;</code>:</p>

<p>```</p>

<pre><code>def initFacebokShareBtn = { -&gt; //note this
    ...
}
</code></pre>

<p>```</p>

<p>By having that extra notation it gave me errors. Once I removed it then it worked. Perhaps the Grails folks introduced something in 2.1.4?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: controller css isn't precompiled]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/04/07/rails-controller-css-isnt-precompiled/"/>
    <updated>2013-04-07T22:33:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/04/07/rails-controller-css-isnt-precompiled</id>
    <content type="html"><![CDATA[<p>I'm in the process of converting a single page app into using rendering it from a controller, and so I was moving around some of the css around. By default Rails set the <code>application.css</code> to include <code>//= require_tree .</code>. So naturally I removed it and in my <code>application.html.erb</code> I added the following: <code> &lt;%= stylesheet_link_tag params[:controller] %&gt;</code></p>

<p>All good, right? Wrong! When I started the app in prod mode, I got an error like this:</p>

<p><code>
shortcuts.css isn't precompiled
</code></p>

<p>What's going on here? Well upon some searching and reading through the asset pipeline guide, I realized that by default Rails does not compile your css under the stylesheets folder. I had to do this in <code>production.rb</code> to make it work:</p>

<p><code>
  config.assets.precompile += %w( *.css *.js )
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grails: groovy.lang.MissingMethodException: No signature of method: ....getPersistentValue()]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/04/02/grails-groovy-dot-lang-dot-missingmethodexception-no-signature-of-method-dot-dot-dot-getpersistentvalue/"/>
    <updated>2013-04-02T15:42:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/04/02/grails-groovy-dot-lang-dot-missingmethodexception-no-signature-of-method-dot-dot-dot-getpersistentvalue</id>
    <content type="html"><![CDATA[<p>So I'm writing a unit test that uses getPersistentValue in one of the controllers, and I ran into the problem where I got this error:</p>

<p><code>
groovy.lang.MissingMethodException: No signature of method: Domain.getPersistentValue()
</code></p>

<p>I assumed that when I have the <code>@Mock(domain)</code> annotation, I would get all the available methods to me in the test. However, upon inspecting the methods using <code>instance.metaClass.methods*.name</code>, I realized it was missing some of the methods. Therefore you will need to mock those in your tests.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: not serving assets on production.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/29/rails-not-serving-assets-on-production/"/>
    <updated>2013-03-29T10:57:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/29/rails-not-serving-assets-on-production</id>
    <content type="html"><![CDATA[<p>So I changed my environment to be production, and I had issues with serving static content. Since my app was a single page app, I needed this to work (didn't want to put nginx or apache in front of it).</p>

<p>The error I was getting was this:</p>

<p><code>
ActionController::RoutingError (No route matches [GET] "/"):
</code></p>

<p>I did this in another project and forgot that I need to set the following parameter in <code>production.rb</code>:</p>

<p><code>
  config.serve_static_assets = true
</code></p>

<p>All was good afterwards!</p>
]]></content>
  </entry>
  
</feed>
