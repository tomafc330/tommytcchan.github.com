<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: problems | Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/blog/categories/problems/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-10-05T14:34:27-07:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Passenger Nginx and Rails and Thin - set up reverse proxy on a Thin server instance]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/08/12/passenger-nginx-and-rails-and-thin-set-up-reverse-proxy-on-a-thin-server-instance/"/>
    <updated>2013-08-12T13:22:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/08/12/passenger-nginx-and-rails-and-thin-set-up-reverse-proxy-on-a-thin-server-instance</id>
    <content type="html"><![CDATA[<p>My previous post talked about setting passenger and rails. In this post I will talk about something different - using Nginx as a reverse proxy while having one (or many) Thin server instances.</p>

<p>Basically the setup is the same as the previous post, except that you want to set up the server block a little differently:</p>

<p>```</p>

<pre><code>upstream domain1 {
    server 127.0.0.1:3000;
    #server 127.0.0.1:3001;
}

server {
    listen 80;
    server_name localhost;
    root /home/tchan/repo/venuespot/public;   # &lt;--- be sure to point to 'public'!


    location / {
        proxy_set_header  X-Real-IP  $remote_addr;
        proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        if (-f $request_filename/index.html) {
            rewrite (.*) $1/index.html break;
        }

        if (-f $request_filename.html) {
            rewrite (.*) $1.html break;
        }

        if (!-f $request_filename) {
            proxy_pass http://domain1;
        break;
        }
    }
}
</code></pre>

<p>```</p>

<p>Why might this be a better setup than using Passenger? Well Thin uses an evented model, so for long running blocking I/O operations, it might be good to set this up if you want more fine grain control. Just be sure to check that the Thin instances are still running periodically (or make sure you catch all exceptions in your app).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS: problem with factory/service methods not returning singletons!]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/07/18/angularjs-problem-with-factory-slash-service-methods-not-returning-singletons/"/>
    <updated>2013-07-18T18:31:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/07/18/angularjs-problem-with-factory-slash-service-methods-not-returning-singletons</id>
    <content type="html"><![CDATA[<p>I was looking at an issue today where for the life of me I could not figure out why my controllers are being returned different instances. I even went as far as creating a <a href="http://plnkr.co/edit/QLK8zX827c9SI3lSWXXj">plunkr</a> to proof that I was not insane!</p>

<p>I went back to the drawing board and looked at the code. How could they possibly be different? And then I saw it... I had something like this:</p>

<p>```</p>

<pre><code>                    angular.bootstrap(document.getElementById("content"), ["app.services"]);
</code></pre>

<p>```
Upon reading the angular docs a little bit more, I realized that by calling multiple initializations, we actually create new instances of services/factories, so they are actually not singletons anymore.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 redirect_to with flash :notice does not show up - problem.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/20/rails-3-redirect-to-with-flash-notice-does-not-show-up-problem/"/>
    <updated>2013-06-20T22:02:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/20/rails-3-redirect-to-with-flash-notice-does-not-show-up-problem</id>
    <content type="html"><![CDATA[<p>I was working on my app just now and finally got rid of a stupid annoying thing -- it wouldn't update my flash messages for some reason after I do a redirect_to.</p>

<p>This was what I had:</p>

<p>```</p>

<pre><code>    format.html { redirect_to venues_path, notice: 'Venue space was successfully created.' }
    format.json { render json: @venue_space, status: :created, location: @venue_space }
</code></pre>

<p>```</p>

<p>Pretty standard stuff right? But for some reason I couldn't get the flash messages working at all! I was so baffled by it but then I started tracing down the calls.</p>

<p>Turns out that the <code>venues_path</code> redirects to the index method, and in the index method it does a redirect to the edit method, and in Rails 3 you need <code>flash.keep</code> in order to preserve the flash message. Doh!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Couldn't find User with id=sign_in Devise on Rails 3]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/17/couldnt-find-user-with-id-equals-sign-in-devise-on-rails-3/"/>
    <updated>2013-06-17T08:47:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/17/couldnt-find-user-with-id-equals-sign-in-devise-on-rails-3</id>
    <content type="html"><![CDATA[<p>So I was working on an app that is using devise (who isn't?!) and I got this message:</p>

<p><code>
Couldn't find User with id=sign_in
</code></p>

<p>Turned out I had a <code>resources :users</code> declared as well as <code>devise_for :users</code> and the standard flow overridden the devise sign in flow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Angular JS - form ng-disabled='form.$invalid' not working]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/05/15/angular-js-form-ng-disabled-equals-form-dot-%24invalid-not-working/"/>
    <updated>2013-05-15T12:58:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/05/15/angular-js-form-ng-disabled-equals-form-dot-$invalid-not-working</id>
    <content type="html"><![CDATA[<p>I was writing some validation using Angular JS, and I had something like this:
<code>
&lt;button name="update" class="btn btn-primary" data-ng-disabled="form.$invalid"&gt;Edit&lt;/button&gt;
</code></p>

<p>Judging from the code examples I saw, that should just work. However it didn't for me, until I realized that the <form>'s id attribute had to named in order for angular to reference it:</p>

<p><code>
&lt;form action="/save" method="post" name="form" id="form" &gt;
</code></p>

<p>The problem was solved after I added the id attr to the form.</p>
]]></content>
  </entry>
  
</feed>
