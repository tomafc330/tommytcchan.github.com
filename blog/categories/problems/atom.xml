<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: problems | Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/blog/categories/problems/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2014-04-10T11:33:49-07:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails issue with module in lib folder]]></title>
    <link href="http://tommytcchan.github.com/blog/2014/03/14/rails-issue-with-module-in-lib-folder/"/>
    <updated>2014-03-14T20:04:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2014/03/14/rails-issue-with-module-in-lib-folder</id>
    <content type="html"><![CDATA[<p>I'm doing some refactoring work for <a href="www.venuespot.co">VenueSpot</a> and I was getting this error when I started my app after I moved some of the common code into a module:</p>

<p><code>
NameError - uninitialized constant MyController::DataSource:
</code></p>

<p>Here was MyController:</p>

<p>```
class MyController</p>

<pre><code>include DataSource
...
</code></pre>

<p>end
```</p>

<p>So far so good, what about the DataSource file?</p>

<p>```</p>

<h1>lib/datasource.rb</h1>

<p>module DataSource</p>

<pre><code>def get_mongo_db
    db = MONGODB.db('info')
    # init
    ...
    return db
end
</code></pre>

<p>end
```</p>

<p>In my application.rb:
```</p>

<pre><code>config.autoload_paths += Dir["#{config.root}/lib/**/"]
</code></pre>

<p>```</p>

<p>Okay review the code, and I want you to know what the problem is. Okay got it? Well I didn't for about 10 mins. Guess what the issue was?</p>

<p>.
..
...
....
.....</p>

<p>Alright I'll keep you from the suspense.</p>

<p>It has to do with the file name. Since the module is <code>DataSource</code>, the file name should be data_source.rb!!</p>

<p>I blame it on Friday night coding and drinking while there is beer pong going on in the background. >.&lt;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS and Chrome crashing and hanging]]></title>
    <link href="http://tommytcchan.github.com/blog/2014/02/01/ios-and-chrome-crashing-and-hanging/"/>
    <updated>2014-02-01T22:49:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2014/02/01/ios-and-chrome-crashing-and-hanging</id>
    <content type="html"><![CDATA[<p>So I spent a few hours of my Saturday trying to fix an issue that was occuring for on <a href="www.venuespot.co">venuespot</a>. I thought it had something to do with my code as it started to hang/freeze recently. The behavior was odd because it wasn't actually a crash (I couldn't find any crash logs under General > About Diagnostics &amp; Usage > Diagnostic &amp; Usage Data, which made it more difficult for me to troubleshoot.</p>

<p>When I turned to Google, I was told that it could be because of malformed HTML5 syntax, so I ran it through the <a href="http://validator.w3.org/">validator</a>. Seemed fine. At this point it was really scratching my head, and I proceeded to remove the vendor JavaScripts one by one. Still no luck.</p>

<p>I then proceeded to removing my own code. Still no luck.</p>

<h1>The Solution</h1>

<p>I went even as far as trying to hunt down the iOS header string and rendering a message to tell the user to use Safari. Still doesn't work. So I thought, hmm, it as to be something that is added by a gem. Lo and behold, it was the <code>rack-mini-profiler</code> gem that was adding a bunch of js to the page. After I removed the gem, everything was fine. Yay time for a beer.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ruby uninitialized constant Geokit::LatLng]]></title>
    <link href="http://tommytcchan.github.com/blog/2014/01/26/ruby-uninitialized-constant-geokit-latlng/"/>
    <updated>2014-01-26T22:41:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2014/01/26/ruby-uninitialized-constant-geokit-latlng</id>
    <content type="html"><![CDATA[<h1>The Problem</h1>

<p>While developing a map specific feature for <a href="http://venuespot.co">venuespot</a>, I came across an error similar to the following:</p>

<p><code>
uninitialized constant MyController::Geokit
</code></p>

<p>At first thought I thoght that I had <code>require</code>d the wrong names, but no that was not the case. Okay what else could it be. I checked the gems and it was in there. It was driving me nuts but I finally figured it out.</p>

<h1>The solution</h1>

<p>I tested the library out by going on irb and tried to instantiate some of the classes. That worked. Then I took a look at the Gemfile.lock file and everything checked out. But little did I realize that I didn't include it in my Gemfile, which was what was needed. So including the <code>geokit</code> gem in there made it work. So I guess the story of the day is that explicit <code>require</code> of libraries requires you also to add it to the Gemfile. Either that or from what I've read, install the gem manually (gem install geokit), then adding a require 'geokit' to the top of vendor/plugins/geokit-rails/init.rb.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rails and geokit acts_as_mappable through not working]]></title>
    <link href="http://tommytcchan.github.com/blog/2014/01/08/rails-and-geokit-acts-as-mappable-through-not-working/"/>
    <updated>2014-01-08T17:04:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2014/01/08/rails-and-geokit-acts-as-mappable-through-not-working</id>
    <content type="html"><![CDATA[<p>At <a href="http://www.venuespot.co">venuespot</a>, we are using a matching algorithm to ensure that we match relevant information with the venues. One of the things is using a distance calculator with geokit. In the examples it talks about how one can use the <code>acts_as_mappable</code> to ensure your model has access to the right methods.</p>

<p>It also talked about it is able to use the <code>:through</code> mechanism. Here's the example they provided:</p>

<p>```
class Location &lt; ActiveRecord::Base
  belongs_to :locatable, :polymorphic => true
  acts_as_mappable
end</p>

<p>class Company &lt; ActiveRecord::Base
  has_one :location, :as => :locatable  # also works for belongs_to associations
  acts_as_mappable :through => :location
end
```</p>

<p>However, my model isn't using polymorphic belongs_to (yet), but in theory I should be able to do something like this:</p>

<p><code>
Company.within(distance, :origin =&gt; @somewhere)
</code></p>

<p>However, this proved to be a problem because the db didn't like it:</p>

<p><code>
SELECT `venues`.*,
 (ACOS(least(1,COS(0.8595746566072073)*COS(-2.1485003092050197)*COS(RADIANS(locations.lat))*COS(RADIANS(locations.lng))+
 COS(0.8595746566072073)*SIN(-2.1485003092050197)*COS(RADIANS(locations.lat))*SIN(RADIANS(locations.lng))+
 SIN(0.8595746566072073)*SIN(RADIANS(locations.lat))))*3963.19)
 AS distance FROM `locations` WHERE ((locations.lat&gt;48.38258088287847 AND locations.lat&lt;50.11741911712155 AND locations.lng&gt;-124.42871224851768 AND locations.lng&lt;-121.7712877514823)) AND ((
 (ACOS(least(1,COS(0.8595746566072073)*COS(-2.1485003092050197)*COS(RADIANS(locations.lat))*COS(RADIANS(locations.lng))+
 COS(0.8595746566072073)*SIN(-2.1485003092050197)*COS(RADIANS(locations.lat))*SIN(RADIANS(locations.lng))+
 SIN(0.8595746566072073)*SIN(RADIANS(locations.lat))))*3963.19)
 &lt;= 60)) //problem with locations not found
</code></p>

<h1>The solution</h1>

<p>It turns out that I needed to include the associated association in order for it to know what it's matching on:</p>

<p>```</p>

<pre><code>Venue.includes(:location).within(radius, :origin =&gt; [lat, lng]).all.each do |venue|
    ...
end
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS: using the $event for an a tag can cause problems.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/09/01/angularjs-using-the-%24event-for-an-a-tag-can-cause-problems/"/>
    <updated>2013-09-01T12:01:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/09/01/angularjs-using-the-$event-for-an-a-tag-can-cause-problems</id>
    <content type="html"><![CDATA[<p>So I was troubleshooting a bug on one of the projects that uses AngularJS. Consider this markup:
<code>
&lt;a href="http://tommytcchan.github.com/fooPage" data-ng-click="show($event)"&gt;&lt;span&gt;foobar!&lt;/span&gt;&lt;/a&gt;
</code></p>

<p>In the js, this was what was declared:
```</p>

<pre><code>$scope.show = function (event) {
    var href = event.target.href;
    ...
};
</code></pre>

<p>```</p>

<p>Now, the interesting thing about this is that it <em>sometimes</em> works. The reason is that if you click on the link outside of the <span>, then the event.target resolves to the <a> tag. However, if you click within the span, then the event.target is the <span> tag, and there is no href there, thus throwing an error.</p>

<p>The fix:</p>

<p>The solution is actually pretty simple. Instead of using <code>event.target</code>, use <code>event.currentTarget</code>. That resolves to the <a> and it will work for all cases.</p>

<p>Hope that helps!</p>
]]></content>
  </entry>
  
</feed>
