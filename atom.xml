<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-12-15T01:11:37-08:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Secret Ingredient to a co-founder's success - Love]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/12/15/secret-ingredient-to-a-co-founders-success-love/"/>
    <updated>2013-12-15T01:09:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/12/15/secret-ingredient-to-a-co-founders-success-love</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been writing a lot of technical stuff previously and it has come to my attention that sooner or later I will have to write about the high level stuff. So let&#8217;s talk about one of the things that is dear and close to me - my significant other. I&#8217;ll have to admit, I joke with ex-coworkers about how much she needs me, but deep down inside she is my rock and without her I would probably have lost focus by now. I have a letter that is addressed to her that I&#8217;d like to share.</p>

<blockquote><p>To my hunny,</p>

<p>I&#8217;m writing to you on my first day of unemployment. Do you remember the last time I was unemployed? I did&#8230;you had to carry our butts for 2 years until I was done school. Fast forward 7 years and here we are all over again&#8230;only this time the stakes are higher.</p>

<p>I feel like this is such a turning point in our lives and I really want to express how thankful I am to have you by my side through thick and thin. You are my everything and I can&#8217;t imagine not having you with me on this journey.</p>

<p>I know the next few months/years will not be easy so I apologize in advance right now for all the hardships that will be coming up. I apologize for those late working nights where I won&#8217;t be able to spend alone time with you. I apologize for all nights that we&#8217;re apart together because I&#8217;m travelling for business. I apologize for all the stupid things I&#8217;ll say after a long day at work. I apologize for boring you with all my talk about how using Puma is better than Unicorn for our Rails server implementation. And last but not least I apologize in advance for making all the sacrifices that you make in order for me to chase my dreams. Please still cook for me during those times.</p>

<p>Now I know there will be some rainy days up ahead but I&#8217;ll hold you tight under my umbrella and we&#8217;ll laugh it off. There will also be those freezing days but in those times I&#8217;ll hold you tighter and we&#8217;ll laugh even harder. I want you to know that whatever the weather is, the sun is always above. In those stormy days I want you to remember those sunny tunes and let these great memories carry us through. Please try to be patient with me and still laugh at my corny jokes. There will also be times where the business doesn&#8217;t go the way we planned and I promise not to let that jeopardize the special relationship that we have. I love you with all my heart and soul and I am so grateful that you are mine. Life is a journey and although sometimes there are obstacles along the way, we will look back and realize that sometimes it&#8217;s not important where we end up, but how we got there.</p>

<p>Love,</p>

<p>Tommy</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jasmine Spies on a 2nd level object]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/12/03/jasmine-spies-on-a-2nd-level-object/"/>
    <updated>2013-12-03T16:03:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/12/03/jasmine-spies-on-a-2nd-level-object</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been trying to mock a 2 level object that looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    mockSoundService = {
</span><span class='line'>        getSound: function () {
</span><span class='line'>            return {
</span><span class='line'>                volume: function () {
</span><span class='line'>                }
</span><span class='line'>            };
</span><span class='line'>        }
</span><span class='line'>    };</span></code></pre></td></tr></table></div></figure>


<p>Naturally, I thought it would work with something like this in my test:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    spyOn(mockSoundService.getSound(), 'volume');
</span><span class='line'>    service.closeIntroVideo();
</span><span class='line'>
</span><span class='line'>    expect(service.getPlayer()).toBeNull();
</span><span class='line'>    expect(mockSoundService.getSound().volume).toHaveBeenCalled();</span></code></pre></td></tr></table></div></figure>


<p>However, I kept getting errors like these:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Expected a spy, but got undefined.</span></code></pre></td></tr></table></div></figure>


<p>It turns out that you need to break apart the 2nd level object that was nested. Therefore the final product should look something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    mockSound = {
</span><span class='line'>        volume: function () {
</span><span class='line'>        }
</span><span class='line'>    };
</span><span class='line'>
</span><span class='line'>    mockSoundService = {
</span><span class='line'>        getSound: function () {
</span><span class='line'>            return mockSound;
</span><span class='line'>        }
</span><span class='line'>    }</span></code></pre></td></tr></table></div></figure>


<p>and now in your mocks you can do something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    spyOn(mockSound, 'volume');
</span><span class='line'>    spyOn(mockState, 'go');
</span><span class='line'>    service.closeIntroVideo();</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: Add a custom migrate script for running migrations in another location.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/10/21/rails-add-a-custom-migrate-script-for-running-migrations-in-another-location/"/>
    <updated>2013-10-21T19:14:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/10/21/rails-add-a-custom-migrate-script-for-running-migrations-in-another-location</id>
    <content type="html"><![CDATA[<p>I am currently in the process of refactoring some code in a Rails project for a client, and one of the things that I wanted to do was to separate the database migration scripts that are from the base frameworks (Discourse was used as the base) and the ones I will be adding. This will give a good historical view of all the custom migrations so we don&#8217;t have to go through each one. But in order to do that I had to write my own custom rake task to rake the rake tasks:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>namespace :db do
</span><span class='line'>    desc "Migrate the database by going through the standard migrate folder first, then the custom 1017 folder (options: VERSION=x, VERBOSE=false, SCOPE=blog)."
</span><span class='line'>    task :custom_migrate =&gt; [:environment, :load_config] do
</span><span class='line'>        ActiveRecord::Migration.verbose = ENV["VERBOSE"] ? ENV["VERBOSE"] == "true" : true
</span><span class='line'>        ActiveRecord::Migrator.migrate(ActiveRecord::Migrator.migrations_paths, ENV["VERSION"] ? ENV["VERSION"].to_i : nil) do |migration|
</span><span class='line'>            ENV["SCOPE"].blank? || (ENV["SCOPE"] == migration.scope)
</span><span class='line'>        end
</span><span class='line'>        ActiveRecord::Migrator.migrate('db/migrate/1017', ENV["VERSION"] ? ENV["VERSION"].to_i : nil) do |migration|
</span><span class='line'>            ENV["SCOPE"].blank? || (ENV["SCOPE"] == migration.scope)
</span><span class='line'>        end
</span><span class='line'>
</span><span class='line'>        Rake::Task['db:_dump'].invoke
</span><span class='line'>    end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Notice the last line where it delegates out to the <code>db:_dump</code> task. This is important as it writes out the schema as the end step.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3: joins and not ins]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/10/05/rails-3-joins-and-not-ins/"/>
    <updated>2013-10-05T14:26:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/10/05/rails-3-joins-and-not-ins</id>
    <content type="html"><![CDATA[<p>So I needed to write a complexish query for one of the queries for (VenueSpot.co)|[http://www.venuespot.co]. As we are only running a small instance on aws, I didn&#8217;t to waste time by traversing through my related models using <code>each</code>. I wanted to write a couple of more optimizing queries using the <code>joins</code> keyword and the NOT IN mechanism. At the end it looked like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@events = Event.joins(:event_durations).where("events.state = ? and is_published = ? and event_durations.start_date &gt; ? and events.id NOT IN (?)", 'active', true, DateTime.now, @previous_venue_bid_ids).group('events.id')</span></code></pre></td></tr></table></div></figure>


<p>One thing that tripped me up was that initially my <code>@previous_venue_bid_ids</code> was a string that had all the ids, but the api actually takes in an array of the ids, so just be really sure what you are passing is correct!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[wrong number of arguments (1 for 0)]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/09/16/wrong-number-of-arguments-1-for-0/"/>
    <updated>2013-09-16T18:22:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/09/16/wrong-number-of-arguments-1-for-0</id>
    <content type="html"><![CDATA[<p>So I&#8217;ve started getting the following error message when I started a json service that reads a model which is fog enabled (with s3):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wrong number of arguments (1 for 0) at messages.json.rabl where line #1 raised:</span></code></pre></td></tr></table></div></figure>


<p>I wasn&#8217;t getting this before, so what gives?</p>

<h1>Solution:</h1>

<p>It turned out that I was doing this to get the asset path:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>model.asset</span></code></pre></td></tr></table></div></figure>


<p>However, that only returns the AssetUploader instance, so when it tried to render it, it gave me the error. If you want just the path to s3, you will need the <code>to_s</code> appended to the end.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS: using the $event for an a tag can cause problems.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/09/01/angularjs-using-the-%24event-for-an-a-tag-can-cause-problems/"/>
    <updated>2013-09-01T12:01:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/09/01/angularjs-using-the-$event-for-an-a-tag-can-cause-problems</id>
    <content type="html"><![CDATA[<p>So I was troubleshooting a bug on one of the projects that uses AngularJS. Consider this markup:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;a href="http://tommytcchan.github.com/fooPage" data-ng-click="show($event)"&gt;&lt;span&gt;foobar!&lt;/span&gt;&lt;/a&gt;</span></code></pre></td></tr></table></div></figure>


<p>In the js, this was what was declared:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$scope.show = function (event) {
</span><span class='line'>  var href = event.target.href;
</span><span class='line'>  ...
</span><span class='line'>};</span></code></pre></td></tr></table></div></figure>


<p>Now, the interesting thing about this is that it <em>sometimes</em> works. The reason is that if you click on the link outside of the <span>, then the event.target resolves to the <a> tag. However, if you click within the span, then the event.target is the <span> tag, and there is no href there, thus throwing an error.</p>

<p>The fix:</p>

<p>The solution is actually pretty simple. Instead of using <code>event.target</code>, use <code>event.currentTarget</code>. That resolves to the <a> and it will work for all cases.</p>

<p>Hope that helps!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set up SMTP to send mail on Postfix on Ubuntu 12.10]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/08/30/set-up-smtp-to-send-mail-on-postfix-on-ubuntu-12-dot-10/"/>
    <updated>2013-08-30T13:52:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/08/30/set-up-smtp-to-send-mail-on-postfix-on-ubuntu-12-dot-10</id>
    <content type="html"><![CDATA[<p>I needed something quick to send emails for internal use. Basically it&#8217;s just a follow on <a href="https://help.ubuntu.com/community/Postfix">this</a> page. However, I needed to expose the email to the different clients on our internal network. There following two extra steps were needed:</p>

<p>1.) In your mail config, remove this line:</p>

<p>smtpd_use_tls=no</p>

<p>2.) In the same config, update this line:</p>

<p><code>mynetworks = 127.0.0.0/8 10.0.0.0/8</code></p>

<p>This tells that the smtp should be allowed on the network.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passenger Nginx and Rails and Thin - set up reverse proxy on a Thin server instance]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/08/12/passenger-nginx-and-rails-and-thin-set-up-reverse-proxy-on-a-thin-server-instance/"/>
    <updated>2013-08-12T13:22:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/08/12/passenger-nginx-and-rails-and-thin-set-up-reverse-proxy-on-a-thin-server-instance</id>
    <content type="html"><![CDATA[<p>My previous post talked about setting passenger and rails. In this post I will talk about something different - using Nginx as a reverse proxy while having one (or many) Thin server instances.</p>

<p>Basically the setup is the same as the previous post, except that you want to set up the server block a little differently:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>upstream domain1 {
</span><span class='line'>  server 127.0.0.1:3000;
</span><span class='line'>  #server 127.0.0.1:3001;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>server {
</span><span class='line'>  listen 80;
</span><span class='line'>  server_name localhost;
</span><span class='line'>  root /home/tchan/repo/venuespot/public;   # &lt;--- be sure to point to 'public'!
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  location / {
</span><span class='line'>      proxy_set_header  X-Real-IP  $remote_addr;
</span><span class='line'>      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
</span><span class='line'>      proxy_set_header Host $http_host;
</span><span class='line'>      proxy_redirect off;
</span><span class='line'>
</span><span class='line'>      if (-f $request_filename/index.html) {
</span><span class='line'>          rewrite (.*) $1/index.html break;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      if (-f $request_filename.html) {
</span><span class='line'>          rewrite (.*) $1.html break;
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      if (!-f $request_filename) {
</span><span class='line'>          proxy_pass http://domain1;
</span><span class='line'>      break;
</span><span class='line'>      }
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>Why might this be a better setup than using Passenger? Well Thin uses an evented model, so for long running blocking I/O operations, it might be good to set this up if you want more fine grain control. Just be sure to check that the Thin instances are still running periodically (or make sure you catch all exceptions in your app).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Passenger]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/08/12/passenger/"/>
    <updated>2013-08-12T12:52:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/08/12/passenger</id>
    <content type="html"><![CDATA[<p>I&#8217;m setting up our beta site for <a href="http://venuespot.co">venuespot</a>, and one of the golden rules is that everything should be as close to the production site as possible.</p>

<p>Here are the instructions for how to use passenger with nginx and rails (3.2.11) on Ubuntu 12.10. I did read the docs but I found that it was missing a few things, so hopefully this tutorial will address your problems. See the section on Troubleshooting for more solutions to the problems I encountered.</p>

<h1>Introduction</h1>

<p>First, you will want to install passenger:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install passenger</span></code></pre></td></tr></table></div></figure>


<p>(Optional). Then, you would want to get the latest rvm:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvm get latest
</span><span class='line'>rvm reload</span></code></pre></td></tr></table></div></figure>


<p>Now install nginx with the passenger mod:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rvmsudo passenger-install-nginx-module
</span><span class='line'>(If the above fails, then you will need to update your rvm.)</span></code></pre></td></tr></table></div></figure>


<p>Now get the libcurl (or whatever it tells you) library.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>apt-get install libcurl4-openssl-dev</span></code></pre></td></tr></table></div></figure>


<p>Okay, we&#8217;re at the halfway point. Next we should edit the nginx config file at <code>/opt/nginx/conf/nginx.conf</code>. Remove the original <code>server</code> block and add the following</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server {
</span><span class='line'>    listen 80;
</span><span class='line'>    server_name localhost;
</span><span class='line'>    root /yourwebapp/public; # &lt;--- be sure to point to 'public'!
</span><span class='line'>    passenger_enabled on;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>passenger_pre_start http://localhost/;
</span></code></pre></td></tr></table></div></figure>


<p>Next, we need to make sure the nginx process can have 777 access to config.ru and make sure all the way up the path we have 777 as well.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>chmod 777 /yourwebapp
</span><span class='line'>chmod 777 config.ru </span></code></pre></td></tr></table></div></figure>


<p>Now create the nginx init script:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -O init-deb.sh http://library.linode.com/assets/1139-init-deb.sh
</span><span class='line'>mv init-deb.sh /etc/init.d/nginx
</span><span class='line'>chmod +x /etc/init.d/nginx
</span><span class='line'>/usr/sbin/update-rc.d -f nginx defaults</span></code></pre></td></tr></table></div></figure>


<p>Now start the server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/etc/init.d/nginx start</span></code></pre></td></tr></table></div></figure>


<p>There you have it folks! Navigate to localhost and you should see your site!</p>

<h1>Troubleshooting</h1>

<p>In the event that you don&#8217;t see anything, you should check your logs in <code>/opt/nginx/logs</code> to ensure everything was done correctly.</p>

<p>For example, you might see this: <code>Error page:
Could not find amq-client-1.0.2 in any of the sources (Bundler::GemNotFound)</code></p>

<p>This means your gems have not been installed. Do a bundle install in your rails dir</p>

<p>Or, you might see somethign like this: <code>terminate called after throwing an instance of 'Passenger::FileSystemException'
  what():  Cannot stat '/yourwebapp/config.ru': Permission denied (errno=13)
</code></p>

<p>This means you need to set your permissions correctly for the whole path (see above).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec and Devise: not hitting controller action.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/08/11/rspec-and-devise-not-hitting-controller-action/"/>
    <updated>2013-08-11T12:26:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/08/11/rspec-and-devise-not-hitting-controller-action</id>
    <content type="html"><![CDATA[<p>Okay so I ran into another problem. Just when I thought I got it figured out with the <code>sign_in</code> helper provided from the page in the previous post, a gaint boulder fell right in front of me. For whatever reason, the test method will not call into my controller method under test.</p>

<p>This is what I had originally:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>before (:each) do
</span><span class='line'>  sign_in users(:organizer)
</span><span class='line'>end
</span><span class='line'>
</span><span class='line'>describe "GET new with no bid id" do
</span><span class='line'>  it "returns not found" do
</span><span class='line'>      get :new, {}, valid_session
</span><span class='line'>      flash[:error].should equal('error')
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Pretty straight forward one would persume right? Wrong!</p>

<p>Upon more digging around, I realized that Devise&#8217;s helpers are overridding the session variables, and so if we do <code>get :new, {}, valid_session</code>, the valid_session will override what was put into the session, causing issues with &#8216;signing in&#8217;. Therefore the solution is to remove that. If you still need to populate a session, click <a href="http://stackoverflow.com/a/9658682/151899">here</a> for a workaround.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails unit test: NoMethodError: undefined method authenticate for nil:NilClass]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/08/11/rails-unit-test-nomethoderror-undefined-method-authenticate-for-nil-nilclass/"/>
    <updated>2013-08-11T11:45:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/08/11/rails-unit-test-nomethoderror-undefined-method-authenticate-for-nil-nilclass</id>
    <content type="html"><![CDATA[<p>I&#8217;ve started foraying out of the standard MiniTest framework and into rspec, since I&#8217;ve been writing a lot more Jasmine unit tests lately. One of the very first things I got (unfortunately) was this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>NoMethodError: undefined method `authenticate!' for nil:NilClass</span></code></pre></td></tr></table></div></figure>


<p>Luckily, the devise docs tells you exactly what&#8217;s wrong on their docs <a href="https://github.com/plataformatec/devise#test-helpers">page</a> regarding test helpers. So if you are seeing the same issue, consult their docs!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS: problem with factory/service methods not returning singletons!]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/07/18/angularjs-problem-with-factory-slash-service-methods-not-returning-singletons/"/>
    <updated>2013-07-18T18:31:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/07/18/angularjs-problem-with-factory-slash-service-methods-not-returning-singletons</id>
    <content type="html"><![CDATA[<p>I was looking at an issue today where for the life of me I could not figure out why my controllers are being returned different instances. I even went as far as creating a <a href="http://plnkr.co/edit/QLK8zX827c9SI3lSWXXj">plunkr</a> to proof that I was not insane!</p>

<p>I went back to the drawing board and looked at the code. How could they possibly be different? And then I saw it&#8230; I had something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>                 angular.bootstrap(document.getElementById("content"), ["app.services"]);</span></code></pre></td></tr></table></div></figure>


<p>Upon reading the angular docs a little bit more, I realized that by calling multiple initializations, we actually create new instances of services/factories, so they are actually not singletons anymore.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: using link_to to include icons.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/07/01/rails-using-link-to-to-include-icons/"/>
    <updated>2013-07-01T17:04:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/07/01/rails-using-link-to-to-include-icons</id>
    <content type="html"><![CDATA[<p>So I was trying to make my links look pretty by adding the <code>icon-*</code> classes to the link. However I was using the <code>link_to</code> method and it was not clear reading the docs how to do that. Luckily I figured it out:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%= link_to '&lt;i class="icon-remove"&gt;&lt;/i&gt;'.html_safe, message, {:method =&gt; :delete, :class =&gt; 'btn btn-small'}%&gt;</span></code></pre></td></tr></table></div></figure>


<p>Pretty awesome!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mvn grails plugin: run test coverage]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/24/mvn-grails-plugin-run-test-coverage/"/>
    <updated>2013-06-24T17:58:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/24/mvn-grails-plugin-run-test-coverage</id>
    <content type="html"><![CDATA[<p>I was stuck on how to pass the <code>-coverage</code> variable into a mavenized grails project. After looking from the inter web I got this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mvn grails:exec -Dcommand=test-app -Dargs=-coverage</span></code></pre></td></tr></table></div></figure>


<p>That did the trick. Thanks Google!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AngularJS and X-Editable - Calling .editable after the last element with ng-repeat.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/23/angularjs-and-x-editable-calling-editable-after-the-last-element-with-ng-repeat/"/>
    <updated>2013-06-23T18:39:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/23/angularjs-and-x-editable-calling-editable-after-the-last-element-with-ng-repeat</id>
    <content type="html"><![CDATA[<p>I had a pretty complicated scenario that I&#8217;m working on which entails the use of AngularJS and the X-Editable plugin.</p>

<h1>The scenario.</h1>

<p>I have a page where it loads the Assets using ajax, and that collection gets rendered using an ng-repeat. Complicated to the fact is that the fields of the Assets are inline editable, which meant I need to call the <code>$(.editable).editable()</code> after all the elements are rendered (you can&#8217;t do it on <code>document.ready</code> since it&#8217;s loaded via ajax.</p>

<p>Here&#8217;s the visual: http://screencloud.net/v/qbd0</p>

<h1>The solution.</h1>

<p>Here&#8217;s how I fixed it. Basically add a custom directive <code>makeEditable</code> which has this declaration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>        .directive('makeEditable', function() {
</span><span class='line'>            return function(scope, element, attrs) {
</span><span class='line'>                scope.$watch('$last',function(){
</span><span class='line'>                    $('.editable').editable();
</span><span class='line'>                });
</span><span class='line'>            };
</span><span class='line'>        });</span></code></pre></td></tr></table></div></figure>


<p>and in your view, just do this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>    &lt;div class="span4" data-toggle="modal-gallery" data-target="#modal-gallery" data-ng-repeat="file in queue" make-editable&gt;
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>Now the input elements should be editable!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use of select_tag to map associated model in dropdowns.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/23/use-of-select-tag-to-map-associated-model-in-dropdowns/"/>
    <updated>2013-06-23T15:33:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/23/use-of-select-tag-to-map-associated-model-in-dropdowns</id>
    <content type="html"><![CDATA[<p>Here&#8217;s a way to create a dropdown to save associated model in dropdown.</p>

<p>In _addform.html.erb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>      &lt;%= select_tag(:organization_id, options_for_select(current_user.organizations.collect { |p| [p.name, p.id] }), {:include_blank =&gt; false}) %&gt;</span></code></pre></td></tr></table></div></figure>


<p>In _editform.html.erb:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    &lt;%= select_tag(:organization_id, options_for_select(current_user.organizations.collect { |p| [p.name, p.id] }, :selected =&gt; @advertisement.organization.id), {:include_blank =&gt; false}) %&gt;</span></code></pre></td></tr></table></div></figure>


<p>And in the controller:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@advertisement.organization = Organization.find(params[:organization_id])</span></code></pre></td></tr></table></div></figure>


<p>I would like to not have two different _form templates so what I would do is probably extract that logic in the helper so we can just have one tag for both create and edit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rant post: Shit will not work if you include Angular.js twice]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/22/rant-post-shit-will-not-work-if-you-include-angular-dot-js-twice/"/>
    <updated>2013-06-22T17:28:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/22/rant-post-shit-will-not-work-if-you-include-angular-dot-js-twice</id>
    <content type="html"><![CDATA[<p>Alright I&#8217;m going to rant more than blog for this entry. I spent the last hour trying to find out why a library I&#8217;m planning to use (jquery-upload) didn&#8217;t work. I&#8217;ve learn that the asset pipeline is sort of a double edge sword&#8230;if you define something in the application and you define it again in your controller specific template, it will include the js file twice. Why isn&#8217;t Sprockets smarter?! Also, when I include AngularJS twice, subtle things stop working. Why can&#8217;t the AnglarJS guys not include the library if it detected that it&#8217;s already included??! Anyways end of rant. Back to work..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 redirect_to with flash :notice does not show up - problem.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/20/rails-3-redirect-to-with-flash-notice-does-not-show-up-problem/"/>
    <updated>2013-06-20T22:02:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/20/rails-3-redirect-to-with-flash-notice-does-not-show-up-problem</id>
    <content type="html"><![CDATA[<p>I was working on my app just now and finally got rid of a stupid annoying thing &#8211; it wouldn&#8217;t update my flash messages for some reason after I do a redirect_to.</p>

<p>This was what I had:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>    format.html { redirect_to venues_path, notice: 'Venue space was successfully created.' }
</span><span class='line'>    format.json { render json: @venue_space, status: :created, location: @venue_space }</span></code></pre></td></tr></table></div></figure>


<p>Pretty standard stuff right? But for some reason I couldn&#8217;t get the flash messages working at all! I was so baffled by it but then I started tracing down the calls.</p>

<p>Turns out that the <code>venues_path</code> redirects to the index method, and in the index method it does a redirect to the edit method, and in Rails 3 you need <code>flash.keep</code> in order to preserve the flash message. Doh!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Couldn't find User with id=sign_in Devise on Rails 3]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/17/couldnt-find-user-with-id-equals-sign-in-devise-on-rails-3/"/>
    <updated>2013-06-17T08:47:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/17/couldnt-find-user-with-id-equals-sign-in-devise-on-rails-3</id>
    <content type="html"><![CDATA[<p>So I was working on an app that is using devise (who isn&#8217;t?!) and I got this message:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Couldn't find User with id=sign_in</span></code></pre></td></tr></table></div></figure>


<p>Turned out I had a <code>resources :users</code> declared as well as <code>devise_for :users</code> and the standard flow overridden the devise sign in flow.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails 3 devise gem: sign out]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/06/10/rails-3-devise-gem-sign-out/"/>
    <updated>2013-06-10T08:26:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/06/10/rails-3-devise-gem-sign-out</id>
    <content type="html"><![CDATA[<p>So I&#8217;ve been using this awesome gem for the authentication module&#8230;so far I&#8217;m loving it. Follows the convention over configuration model. I needed to log out my user and this is all I needed in my view (note the method :delete is required):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;%= link_to "Sign out", destroy_user_session_path, :method =&gt; :delete %&gt;</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
