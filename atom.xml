<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-04-02T20:35:22-07:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails: escape string for view to use.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/04/02/rails-escape-string-for-view-to-use/"/>
    <updated>2013-04-02T20:33:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/04/02/rails-escape-string-for-view-to-use</id>
    <content type="html"><![CDATA[<p>I had this issue with a Rails app where the string content has been html encoded. This was not good because I was feeding the information to view layer that contains some javascript. Therefore this was what I needed to do:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@tags = Tag.all_as_str.html_safe</span></code></pre></td></tr></table></div></figure>


<p>so the <code>html_safe</code> does the trick here for me.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grails: groovy.lang.MissingMethodException: No signature of method: ....getPersistentValue()]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/04/02/grails-groovy-dot-lang-dot-missingmethodexception-no-signature-of-method-dot-dot-dot-getpersistentvalue/"/>
    <updated>2013-04-02T15:42:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/04/02/grails-groovy-dot-lang-dot-missingmethodexception-no-signature-of-method-dot-dot-dot-getpersistentvalue</id>
    <content type="html"><![CDATA[<p>So I&#8217;m writing a unit test that uses getPersistentValue in one of the controllers, and I ran into the problem where I got this error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>groovy.lang.MissingMethodException: No signature of method: Domain.getPersistentValue() </span></code></pre></td></tr></table></div></figure>


<p>I assumed that when I have the <code>@Mock(domain)</code> annotation, I would get all the available methods to me in the test. However, upon inspecting the methods using <code>instance.metaClass.methods*.name</code>, I realized it was missing some of the methods. Therefore you will need to mock those in your tests.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: not serving assets on production.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/29/rails-not-serving-assets-on-production/"/>
    <updated>2013-03-29T10:57:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/29/rails-not-serving-assets-on-production</id>
    <content type="html"><![CDATA[<p>So I changed my environment to be production, and I had issues with serving static content. Since my app was a single page app, I needed this to work (didn&#8217;t want to put nginx or apache in front of it).</p>

<p>The error I was getting was this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ActionController::RoutingError (No route matches [GET] "/"):</span></code></pre></td></tr></table></div></figure>


<p>I did this in another project and forgot that I need to set the following parameter in <code>production.rb</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  config.serve_static_assets = true</span></code></pre></td></tr></table></div></figure>


<p>All was good afterwards!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: undefined method... after a migration script change]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/28/rails-undefined-method-dot-dot-dot-after-a-migration-script-change/"/>
    <updated>2013-03-28T21:56:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/28/rails-undefined-method-dot-dot-dot-after-a-migration-script-change</id>
    <content type="html"><![CDATA[<p>So I updated my model by changing the migration script and then doing <code>rake db:drop</code> and &#8220;`rake db:create&#8220;&#8220; and thought I would be okay. However, when I started my app after I changed the view layer, I got something like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>undefined method `command_name' for #&lt;Shortcut:0x00000003c3b4e8&gt;</span></code></pre></td></tr></table></div></figure>


<p>What gives? It turned out that I also needed to modify <code>schema.rb</code> to create the initial table. So that is a good place to check out if you find yourself changing the migration data.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android:setting the default value of a setting with a colon]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/27/android-setting-the-default-value-of-a-setting-with-a-colon/"/>
    <updated>2013-03-27T20:34:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/27/android-setting-the-default-value-of-a-setting-with-a-colon</id>
    <content type="html"><![CDATA[<p>So I am working on my Android app and one of the basic things I needed to do was to set a default preference. To do that I was using the preference defined in the xml. However, I was getting messages like these:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>java.lang.RuntimeException: Unable to start activity ComponentInfo{com.codetipdaily/com.codetipdaily.Preferences}: java.lang.ClassCastException: java.lang.Boolean cannot be cast to java.lang.String</span></code></pre></td></tr></table></div></figure>


<p>I had no idea why, but I fixed it by setting the <code>android:key</code> to be a different key. I had the same key referenced as a CheckboxPreferences a few hours ago, and that seemed to have done the trick. Weird!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android: IntentService.onHandleIntent() not called]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/25/android-intentservice-dot-onhandleintent-not-called/"/>
    <updated>2013-03-25T21:27:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/25/android-intentservice-dot-onhandleintent-not-called</id>
    <content type="html"><![CDATA[<p>So I&#8217;m starting my new companion app to www.codetipdaily.com and one of the first things I need to create is a service that I can use to call out to the server once a day. Naturally I gravitated towards the <code>IntentSevice</code>, which seems to be the simplest to use. I had also overridden in my service.onStartCommand() to return <code>START_STICKY</code>, which would restart the service should it be stopped. Once I did that though, the system stopped calling my <code>onHandleIntent()</code> method. What&#8217;s going on?</p>

<p>It turned out that I had forgotten to call <code>super.onStartCommand()</code> before I returned the static int. So the following fixed it:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@Override
</span><span class='line'>public int onStartCommand(android.content.Intent intent, int flags, int startId) {
</span><span class='line'>  super.onStartCommand(intent, flags, startId);
</span><span class='line'>  return START_STICKY;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mocking Grails injected methods such as encodeAsURL in unit tests.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/19/mocking-grails-injected-methods-such-as-encodeasurl-in-unit-tests/"/>
    <updated>2013-03-19T17:26:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/19/mocking-grails-injected-methods-such-as-encodeasurl-in-unit-tests</id>
    <content type="html"><![CDATA[<p>Today I was writing a test on a Grails service that used the encodeAsURL method. When I ran the test, I got something like the following:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>groovy.lang.MissingMethodException: No signature of method: java.lang.String.encodeAsURL() is applicable for argument types: () values: []</span></code></pre></td></tr></table></div></figure>


<p>Upon researching some more, I realized that Grails adds a whole bunch of utilit methods to the String class at runtime, such as <code>"encodeAsBase64", "encodeAsHTML",
"encodeAsJSON", "encodeAsJavaScript", "encodeAsURL", "encodeAsXML"</code>.</p>

<p>So what do you do when you run into this situation in your tests? Well, do what the Grails framework does&#8230;add it to the metaClass of String! Here&#8217;s the example that you need to add to the test (preferably the setup() method):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'> String.metaClass.encodeAsURL = {
</span><span class='line'>      delegate.toString()
</span><span class='line'>  }</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Example: How to set up debugging with Karma (formerly Testacular) and Webstorm]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/18/example-how-to-set-up-debugging-with-karma-formerly-testacular-and-webstorm/"/>
    <updated>2013-03-18T19:50:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/18/example-how-to-set-up-debugging-with-karma-formerly-testacular-and-webstorm</id>
    <content type="html"><![CDATA[<h1>Introduction</h1>

<p>This is a test application (uses the default PhoneCat app) but it uses mocha to test the the http service.</p>

<h1>Debugging</h1>

<p>I&#8217;m using Webstorm to perform debugging. But to do this you will need to install <a href="http://karma-runner.github.com/0.8/intro/installation.html">Karma</a>, which is essentially Testacular 2.0.</p>

<h1>Set up</h1>

<p>To set this up, refer to the screenshots provided:</p>

<h6>Step 1:</h6>

<p>Create the Node js runner according to the screen shot.</p>

<p>http://screencloud.net/v/ERqK</p>

<h6>Step 2:</h6>

<p>Create the Debug configuration according to the screen shot. Note that the port will be the port that you Karma server ran on for the Node.js configuration you defined for Step 1.</p>

<p>http://screencloud.net/v/3sH0</p>

<h6>Step 3:</h6>

<p>Start the Node.js run, then start the Debug configuration after you set some breakpoints.</p>

<p>http://screencloud.net/v/2oGA</p>

<p>Read more at:
https://github.com/tommytcchan/js-test-examples/tree/master/angularjs/testing/mocha</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set cookie with domain of localhost will not work for chrome/chromium browswer]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/18/set-cookie-with-domain-of-localhost-will-not-work-for-chrome-slash-chromium-browswer/"/>
    <updated>2013-03-18T12:09:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/18/set-cookie-with-domain-of-localhost-will-not-work-for-chrome-slash-chromium-browswer</id>
    <content type="html"><![CDATA[<p>So I was working on setting a cookie for one of the sites, and what I had done was something like this initially:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>     Cookie cookie = new Cookie(
</span><span class='line'>              key,
</span><span class='line'>              value);
</span><span class='line'>      cookie.setMaxAge(7);
</span><span class='line'>      cookie.setPath("/");
</span><span class='line'>      cookie.setDomain(serverDomain);
</span><span class='line'>      
</span><span class='line'>      response.addCookie(cookie);</span></code></pre></td></tr></table></div></figure>


<p>Everything was working on localhost in Firefox and Opera. However, when I looked at the inspector for Chrome, it wasn&#8217;t working! I then tried to use 127.0.0.1 instead of localhost. That worked. So I read up some more about it and apparently if you tried to set the domain to localhost on a cookie, Chrome will reject it! so the fix was to removed the <code>cookie.setDomain(serverDomain);</code> line and everything was great again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Caution: Testing Grails filter while overriding the request/response object in the setup().]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/15/caution-testing-grails-filter-while-overriding-the-request-slash-response-object-in-the-setup/"/>
    <updated>2013-03-15T12:34:00-07:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/15/caution-testing-grails-filter-while-overriding-the-request-slash-response-object-in-the-setup</id>
    <content type="html"><![CDATA[<p>So I&#8217;m doing some testing on the filter recently, and I of the things I notice right away was that the previous committer had initializers all over the place:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>void test_filters_all_with_no_utmParams_noSession_with__invalid_Cookie() {
</span><span class='line'>      FilterConfig filter = findConfig('all')
</span><span class='line'>
</span><span class='line'>      def request = new MockHttpServletRequest()
</span><span class='line'>      def response = new MockHttpServletResponse()
</span><span class='line'>      setUpWebCookieService(request, response)
</span><span class='line'>
</span><span class='line'>      request.session = createSession(null, null, 'true')
</span><span class='line'>      request.cookies = [new Cookie('blah')]
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>So I thought, why not just put of the same declarations on the setup method()? Well, it turns out that Grails dynamic closures will clobber the request/response variables. When I ran the tests with the declarations in the setup, no matter what I do I was not able to set my variable.</p>

<p>After some digging around, I realized one thing:</p>

<ol>
<li>The test already injects the request/response objects in your filter tests, so overriding actually causes problems, leading to my variables not being set on the correct request/response instance.</li>
</ol>


<p>I&#8217;ll let you decide what&#8217;s best for yourself.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovy: The way to populate a csv/excel file.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/08/groovy-the-way-to-populate-a-csv-slash-excel-file/"/>
    <updated>2013-03-08T13:52:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/08/groovy-the-way-to-populate-a-csv-slash-excel-file</id>
    <content type="html"><![CDATA[<p>I was working on a refactoring for a method that did csv export, and I found a prime a candidate for using the currying mechanism in Groovy.</p>

<p>Consider this example of the code before:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def export = {
</span><span class='line'>  final string[] csvcolumnheadings = ['game', 'campaign name', 'campaign medium', 'campaign code', 'campaign term', 'campaign content',
</span><span class='line'>      'campaign source', 'additional paramter','status', 'created by', 'updated by', 'date created', 'last updated']
</span><span class='line'>  
</span><span class='line'>  ...
</span><span class='line'>
</span><span class='line'>      campaigns.resultset.each { campaign -&gt;
</span><span class='line'>          string[] row = new string[13]
</span><span class='line'>          
</span><span class='line'>          row[0] = campaign.game ? campaign.game : ''
</span><span class='line'>          row[1] = campaign.campaignname ? campaign.campaignname : ''
</span><span class='line'>          row[2] = campaign.type ? campaign.type.tostring() : ''
</span><span class='line'>          row[3] = campaign.campaigncode ? campaign.campaigncode : ''
</span><span class='line'>          row[4] = campaign.campaignterm ?: ''
</span><span class='line'>          row[5] = campaign.campaigncontent?: ''
</span><span class='line'>          row[6] = campaign.source ? campaign.source : ''
</span><span class='line'>          row[7] = campaign.parameter ? campaign.parameter : ''
</span><span class='line'>          row[8] = campaign.status.name ? campaign.status.name : ''
</span><span class='line'>          row[9] = campaign.createdby ? campaign.createdby : ''
</span><span class='line'>          row[10] = campaign.updatedby ? campaign.updatedby : ''
</span><span class='line'>          row[11] = campaign.datecreated ? campaign.datecreated.getdatetimestring() : ''
</span><span class='line'>          row[12] = campaign.lastupdated ? campaign.lastupdated.getdatetimestring() : ''
</span><span class='line'>          
</span><span class='line'>          csvwriter.writenext(row)
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>  ...
</span><span class='line'>      
</span><span class='line'>} </span></code></pre></td></tr></table></div></figure>


<p>So what&#8217;s the problem here? Well, I was adding a couple of fields to the export, and the problem is that there are 4 things I needed to do:
* Add it to the <code>csvcolumnheadings</code>
* Update the number of elements in decl of the array <code>row</code>
* Add the elements
* Update all the numberings</p>

<p>Also, it&#8217;s not a very Groovy way of doing it. Come curryin to the rescue!</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def valRetrieveFunc = {fieldName, campaign -&gt;
</span><span class='line'>      def result
</span><span class='line'>
</span><span class='line'>      if (fieldName instanceof Closure) {
</span><span class='line'>          result = fieldName(campaign)
</span><span class='line'>      } else {
</span><span class='line'>          result = campaign."${fieldName}"
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>      return result ?: ''
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  final Map map = [
</span><span class='line'>          'Game': valRetrieveFunc.curry('game'),
</span><span class='line'>          'Campaign Name': valRetrieveFunc.curry('campaignName'),
</span><span class='line'>          'Campaign Medium': valRetrieveFunc.curry({campaign -&gt; return campaign.type?.toString()}),
</span><span class='line'>          'Campaign Code': valRetrieveFunc.curry('campaignCode'),
</span><span class='line'>          'Campaign Term': valRetrieveFunc.curry('campaignTerm'),
</span><span class='line'>          'Campaign Content': valRetrieveFunc.curry('campaignContent'),
</span><span class='line'>          'Campaign Source': valRetrieveFunc.curry('source'),
</span><span class='line'>          'Additional Paramter': valRetrieveFunc.curry('parameter'),
</span><span class='line'>          'Status': valRetrieveFunc.curry({campaign -&gt; return campaign.status?.name}),
</span><span class='line'>          'Created By': valRetrieveFunc.curry('createdBy'),
</span><span class='line'>          'Updated By': valRetrieveFunc.curry('updatedBy'),
</span><span class='line'>          'Date Created': valRetrieveFunc.curry({campaign -&gt; return campaign.dateCreated?.getDateTimeString()}),
</span><span class='line'>          'Last Updated': valRetrieveFunc.curry({campaign -&gt; return campaign.lastUpdated?.getDateTimeString()})]
</span><span class='line'>
</span><span class='line'>  final String[] csvColumnHeadings = map.keySet()
</span><span class='line'>
</span><span class='line'>  ...
</span><span class='line'>
</span><span class='line'>      campaigns.resultSet.each { campaign -&gt;
</span><span class='line'>          def row = []
</span><span class='line'>          csvColumnHeadings.each({
</span><span class='line'>              row &lt;&lt; map[it](campaign)
</span><span class='line'>          })
</span><span class='line'>
</span><span class='line'>          csvWriter.writeNext(row.toArray() as String[])
</span><span class='line'>      }
</span><span class='line'>
</span><span class='line'>  ...                 </span></code></pre></td></tr></table></div></figure>


<p>Let me annotate this a little bit. The first thing we define was a func on how to get the parameter from the domain object. Notice for complex retrievals we can pass in a closure to how to fetch the object graph. The more important bit here is the <code>curry</code> method, which defines a new closure with the same content, except that the first parameter has been <code>curried</code> and embedded in the new closure. By using <code>curry</code> in this way, the caller of the curried closure doesn&#8217;t need worry about the first parameter..they can just invoke it with the campaign object in this case (ie. <code>row &lt;&lt; map[it](campaign)</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: correct way of before_save in model]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/01/rails-correct-way-of-before-save-in-model/"/>
    <updated>2013-03-01T19:09:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/01/rails-correct-way-of-before-save-in-model</id>
    <content type="html"><![CDATA[<p>So I was reading a tutorial on the before_save and thought this was a valid syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  def before_save(record)
</span><span class='line'>
</span><span class='line'>    if record.publishing
</span><span class='line'>      Tip.find_all_by_publishing(true).each do |publishing_tip|
</span><span class='line'>        publishing_tip.publishing = false
</span><span class='line'>        publishing_tip.published = true
</span><span class='line'>        publishing_tip.save
</span><span class='line'>      end
</span><span class='line'>    end</span></code></pre></td></tr></table></div></figure>


<p>Turned out that this is the valid syntax for Rails 3.1:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  before_save :update_publishing_state
</span><span class='line'>
</span><span class='line'>  def update_publishing_state
</span><span class='line'>    if self.publishing
</span><span class='line'>      Tip.find_all_by_publishing(true).each do |publishing_tip|
</span><span class='line'>        publishing_tip.publishing = false
</span><span class='line'>        publishing_tip.published = true
</span><span class='line'>        publishing_tip.save
</span><span class='line'>      end
</span><span class='line'>    end
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache2: Negotiation: discovered file(s) matching request: ...yi (None could be negotiated)]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/28/apache2-negotiation-discovered-file-s-matching-request-dot-dot-dot-yi-none-could-be-negotiated/"/>
    <updated>2013-02-28T20:32:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/28/apache2-negotiation-discovered-file-s-matching-request-dot-dot-dot-yi-none-could-be-negotiated</id>
    <content type="html"><![CDATA[<p>I received this message in my apache logs while accessing a rewrite on PHP 5.4:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Thu Feb 28 20:29:44 2013] [error] [client 127.0.0.1] Negotiation: discovered file(s) matching request: /home/ad/repo/yii/backend (None could be negotiated).</span></code></pre></td></tr></table></div></figure>


<p>It turned out that I needed to add an extra type defn for PHP 5.4:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>AddType application/x-httpd-php .php</span></code></pre></td></tr></table></div></figure>


<p>source: http://serverfault.com/questions/372733/apache-file-negotiation-failed</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache2: hosting sever from a user directory requires x7x permission]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/28/apache2-hosting-sever-from-a-user-directory-requires-x7x-permission/"/>
    <updated>2013-02-28T20:07:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/28/apache2-hosting-sever-from-a-user-directory-requires-x7x-permission</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been experimenting running a webapp in a a directory where I host my code, and in order for the server to read the dir, the base directory had to be x7x, such as</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chmod 774 repo</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS: margin-top selector not working.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/28/css-image-not-aligning-quite-right/"/>
    <updated>2013-02-28T14:51:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/28/css-image-not-aligning-quite-right</id>
    <content type="html"><![CDATA[<h3>The problem:</h3>

<p>So I&#8217;m trying to set margin-top on a div that contains an image:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;div class="affiliate-logo"&gt;&lt;a href="http://www.gamechannel.de"&gt;&lt;img src="http://tommytcchan.github.com/logo.png"&gt;&lt;/a&gt;&lt;/div&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>.affiliate-logo {
</span><span class='line'>    margin-top: 15px;
</span><span class='line'>    text-align: center;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>However, the margin-top didn&#8217;t work at all for whatever value I put in.</p>

<h3>The solution:</h3>

<p>Turns out that you have to float the div and make that 100% width in order for the margin-top to kick in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.affiliate-logo {
</span><span class='line'>    float: left;
</span><span class='line'>    margin-top: 15px;
</span><span class='line'>    text-align: center;
</span><span class='line'>    width: 100%;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache: SSL error: (98)Address already in use: make_sock: could not bind to address 0.0.0.0:443]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/26/apache-ssl-error-98-address-already-in-use-make-sock-could-not-bind-to-address-0-dot-0-0-dot-0-443/"/>
    <updated>2013-02-26T17:49:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/26/apache-ssl-error-98-address-already-in-use-make-sock-could-not-bind-to-address-0-dot-0-0-dot-0-443</id>
    <content type="html"><![CDATA[<p>So I&#8217;m now configuring SSL with my new httpd server, and for some reason it kept giving me this error when I first started the server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(98)Address already in use: make_sock: could not bind to address 0.0.0.0:443</span></code></pre></td></tr></table></div></figure>


<p>But I did an <code>lsof -i :443</code> and I didn&#8217;t see anything.</p>

<h3>The solution</h3>

<p>Turns out that I forgotten that Ubuntu&#8217;s setup for httpd is a little non standard, in that they included a ports.conf file that includes a conditional which will start listening on port 443 if the ssl mod is enabled. I had also included a <code>listen 443</code> in my configuration, which led to the problem.</p>

<p>Removing the <code>listen 443</code> in my declaration solved the problem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache: Setting up rewrite rules for a server in Ubuntu 12.10]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/26/apache-setting-up-rewrite-rules-for-a-server-in-ubuntu-12-dot-10/"/>
    <updated>2013-02-26T15:26:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/26/apache-setting-up-rewrite-rules-for-a-server-in-ubuntu-12-dot-10</id>
    <content type="html"><![CDATA[<h3>Introduction</h3>

<p>So I was configuring a Java app today, trying to get it deployed on httpd using ajp on Ubuntu. However, there was twist to it, and it is that the /static resources would have to point to a local file system folder (checked out with SCM).</p>

<p>I&#8217;m going to document how this is done on Ubuntu since it was somewhat of a painful process.</p>

<h3>Setup</h3>

<p>I had apache2 install via <code>apt-get</code>. The next step was to configure the apache2 server. The first thing needed was to specify the directory where the /static path resources will look in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory "~/web-assets"&gt;
</span><span class='line'>    Options Indexes FollowSymLinks
</span><span class='line'>    AllowOverride None
</span><span class='line'>    Order allow,deny
</span><span class='line'>    Allow from all
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<p>The next thing to do is to set up the ajp port.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;VirtualHost *:80&gt;
</span><span class='line'>  ...
</span><span class='line'>  
</span><span class='line'>  ProxyPass           /           ajp://localhost:8010/
</span><span class='line'>  ProxyPassReverse    /           ajp://localhost:8010/
</span><span class='line'>
</span><span class='line'>  ProxyPreserveHost On
</span><span class='line'>
</span><span class='line'>  ...
</span><span class='line'>      
</span><span class='line'>&lt;/VirtualHost&gt;</span></code></pre></td></tr></table></div></figure>


<p>We then need to set up the rewrite rule:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(...same VirtualHost declaration...)
</span><span class='line'>RewriteRule       ^/static/\d+/(.*)                               %{DOCUMENT_ROOT}/world/$1       [L,E=STATIC_ASSET:1]
</span><span class='line'>RewriteRule       ^/static/(.*)                                   %{DOCUMENT_ROOT}/world/$1       [L,E=STATIC_ASSET:1]
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>It&#8217;s also good to have logging:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(...same VirtualHost declaration...)
</span><span class='line'># logging
</span><span class='line'>RewriteLog "/home/tchan/logs/rewrite.log"
</span><span class='line'>RewriteLogLevel 3
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>Now enable the mods (using a2enmod):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a2enmod proxy
</span><span class='line'>a2enmod rewrite
</span><span class='line'>a2enmod ssl</span></code></pre></td></tr></table></div></figure>


<p>You might not need proxy or ssl but I did.</p>

<p>The next thing you need to do is to set up the permissions on your folder:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/web-assets
</span><span class='line'>chmod a=rwx -R *</span></code></pre></td></tr></table></div></figure>


<p>Note that if your location is somewhere else you might need to give the same permission to the parent of the folder that apache is looking it.
Also note that you can add the www-data user to the group that has the permission in your file system if you are hesitate to make that directory global.</p>

<p>Once you have it configured, all you need then is to configure you Java app to use the port 8010 defined above:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Connector port="8010" protocol="AJP/1.3" redirectPort="8443"/&gt;</span></code></pre></td></tr></table></div></figure>


<p>One last thing: I had to change the deploy context of the Java app from /app to / (root):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;Context docBase="my-app" path="/" reloadable="true" source="org.eclipse.jst.j2ee.server:my-app"/&gt;&lt;/Host&gt;</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: create a deploy script with ease]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/23/rails-create-a-deploy-script-with-ease/"/>
    <updated>2013-02-23T16:51:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/23/rails-create-a-deploy-script-with-ease</id>
    <content type="html"><![CDATA[<p>I was finding myself having to deploy manually everytime I push something to github, so I&#8217;ve decided to write a deploy shell script to help with this task. Coming from a Java background, I found that creating a deploy script for rails is so much easier. Here is the meat of it:</p>

<p>In deploy.sh</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>#first kill the server if its running
</span><span class='line'>kill -9 `lsof -i :80 | awk '{if (NR!=1) {print $2}}'`
</span><span class='line'>pushd ~/codetipdaily
</span><span class='line'>#then pull from gh
</span><span class='line'>git pull origin master
</span><span class='line'>#assets
</span><span class='line'>rake assets:clean
</span><span class='line'>rake assets:precompile
</span><span class='line'>#start server as daemon
</span><span class='line'>rails server -e production -p 80 --daemon
</span><span class='line'>popd</span></code></pre></td></tr></table></div></figure>


<p>That was a piece of cake!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: production environment is missing application.js and application.css]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/23/rails-production-environment-is-missing-application-dot-js-and-application-dot-css/"/>
    <updated>2013-02-23T16:03:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/23/rails-production-environment-is-missing-application-dot-js-and-application-dot-css</id>
    <content type="html"><![CDATA[<h3>The problem</h3>

<p>So I&#8217;m working on deploying my rails app to production, but I was seeing some weirdness when I ran it in production mode. Firstly, the application resources pointed to application.js and application.css even though my template was not change (ie. <code> &lt;%= stylesheet_link_tag    "application", :media =&gt; "all" %&gt;</code> and <code> &lt;%= javascript_include_tag "application" %&gt;</code>. That led to me believe something was wrong. In addition, when I ran <code>rake assets:precompile</code>, nothing was generated to the <code>public/assets</code> folder.</p>

<h3>What was wrong</h3>

<p>I checked my application.rb, and the <code>config.assets.enabled</code> was set to <code>true</code>. Then I realized that when I first created the app, I turned off that setting in <code>production.rb</code>. Simply turning it back on allowed the compilation of assets and leading rails to resolve to the right path (and not application.js/css).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grails and Intellij: discard old dependencies]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/22/grails-and-intellij-discard-old-dependencies/"/>
    <updated>2013-02-22T10:36:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/22/grails-and-intellij-discard-old-dependencies</id>
    <content type="html"><![CDATA[<p>So I&#8217;m working on a project that relies on a custom plugin, and it was listed as a dependency. However, I wanted it to reference a relative path instead. This was what was listed originally:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>In BuildConfig.groovy
</span><span class='line'>...
</span><span class='line'>  plugins {
</span><span class='line'>      test ":code-coverage:1.2.5"
</span><span class='line'>      test ":spock:0.7"
</span><span class='line'>      compile ":hibernate:2.0.0"
</span><span class='line'>      compile ":quartz:1.0-RC2"
</span><span class='line'>      compile ":rest:0.7"
</span><span class='line'>      compile ":springcache:1.3.1"
</span><span class='line'>          compile ":mycustomplugin:1.0"
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>In order to make it use your project relative project mycustomplugin (instead of fetching it from Archiva using maven), perform the following steps:</p>

<ol>
<li>Change your BuildConfig.groovy &#8211; remove the above decl in the plugins block.</li>
<li>Update your BuildConfig.groovy to add the following:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grails.plugin.location.'mycustomplugin' = "../mycustomplugin"</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Run <code>grails refresh-dependencies</code> in Intellij</li>
</ol>


<p>Once it refreshes then you should be able to reference the plugin in your source tree rather than from remote.</p>
]]></content>
  </entry>
  
</feed>
