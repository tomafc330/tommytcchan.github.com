<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-02-23T11:22:44-08:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[PHP - Set up XDebug]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/17/php-set-up-xdebug/"/>
    <updated>2013-02-17T16:24:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/17/php-set-up-xdebug</id>
    <content type="html"><![CDATA[<p>So my client is using an older version of PHP (5.2 to be exact), and I wanted to install a debugger to ensure that I can test out the flows and examine variables. Finally after an hour of fiddling with it I got it to work.</p>

<h3>The setup</h3>

<p>This guide uses the following:</p>

<p>WAMP Server 2.2
PHP 5.2
Apache 2.2
PHPStorm 5.0.1</p>

<h3>Steps</h3>

<ol>
<li><p>Goto http://xdebug.org/download.php and download the Xdebug version 2.1.2. Note that&#8217;s the last version where they compiled a VC6 version. I got the Thread Safe (TS) version.</p></li>
<li><p>Now edit your php.ini file. Make sure to put the following in:</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zend_extension_ts= "C:\wamp\bin\php\php5.2.2\ext\php_xdebug-2.1.2-5.2-vc6.dll"
</span><span class='line'>xdebug.idekey=PHPSTORM
</span><span class='line'>xdebug.remote_enable=true
</span><span class='line'>;extension=php_xdebug-2.1.2-5.2-vc6.dll</span></code></pre></td></tr></table></div></figure>


<p>`
Note that we explicitly removed the extension= declaration. We <em>don&#8217;t</em> want it.</p>

<ol>
<li><p>Now grab the bookmarklet generator from here: http://www.jetbrains.com/phpstorm/marklets/</p></li>
<li><p>Restart the server</p></li>
<li><p>Have PHPStorm start listening to the connections.</p></li>
<li><p>Put a breakdown somethere you know that the execution will hit it.</p></li>
<li><p>Enjoy!</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovy: unit testing method overridding using metaClass does not work]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/15/groovy-unit-testing-method-overridding-using-metaclass-does-not-work/"/>
    <updated>2013-02-15T16:04:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/15/groovy-unit-testing-method-overridding-using-metaclass-does-not-work</id>
    <content type="html"><![CDATA[<p>So I am devoting my whole afternoon writing unit tests for one of our projects at work and I was stuck on why overridding methods using the metaClass mechanism doesn&#8217;t work. Consider this code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>private void registerSuccessAction(RegistrationFormCommand cmd, userId) {
</span><span class='line'>      def successUrl = '/register/success'
</span><span class='line'>      ...
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>This was in my test</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>  controller.metaClass.registerSuccessAction = { command, userId -&gt;
</span><span class='line'>      println "called"
</span><span class='line'>                      }
</span><span class='line'>
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>However, I was runing into the fact that my overridding method isn&#8217;t being called. What gives?</p>

<p>It turned out that you <em>need</em> to qualify the first command with the type if the method has a typed parameter, otherwise groovy won&#8217;t override the behavior!</p>

<p>This works:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>controller.metaClass.registerSuccessAction = { RegistrationFormCommand command, userId -&gt;
</span><span class='line'>          throw new AssertionError("This should not be called.")
</span><span class='line'>                  }
</span></code></pre></td></tr></table></div></figure>


<p>`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing installing mysql2 gem in Ubuntu 12.10]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/13/fixing-installing-mysql2-gem-in-ubuntu-12-dot-10/"/>
    <updated>2013-02-13T20:59:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/13/fixing-installing-mysql2-gem-in-ubuntu-12-dot-10</id>
    <content type="html"><![CDATA[<p>So I&#8217;ve decided to host my new creation on a VPS instead of using a PAAS like Heroku or Appfog. The main drawback &#8211; I don&#8217;t have control over the environment, which in the Rails case is very annoying. Apparently you can specify the ruby version but I gave up after I tried all the stops.</p>

<p>Anyways I was setting up my server (using Ubuntu) and when I was doing <code>bundle install</code> it gave me a weird error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*** extconf.rb failed ***
</span><span class='line'>Could not create Makefile due to some reason, probably lack of
</span><span class='line'>necessary libraries and/or headers.  Check the mkmf.log file for more
</span><span class='line'>details.  You may need configuration options.</span></code></pre></td></tr></table></div></figure>


<p>After digging into it a little bit, it was found that my server doesn&#8217;t have the dev package <strong>libmysqlclient-dev</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install libmysqlclient-dev mysql-server</span></code></pre></td></tr></table></div></figure>


<p>After doing that and then trying to install</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install mysql2</span></code></pre></td></tr></table></div></figure>


<p>everything worked.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails: Can't use the include keyword in model]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/05/ruby-on-rails-cant-use-the-include-keyword-in-model/"/>
    <updated>2013-02-05T21:30:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/05/ruby-on-rails-cant-use-the-include-keyword-in-model</id>
    <content type="html"><![CDATA[<p>I&#8217;m building the backend of my current project using rails, and one of the things I wanted to do was create a module that I can use in both my controller and model to report issues to a messaging queue, but I was stuck with on the following:</p>

<p>In error_mixin:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module ErrorMixin
</span><span class='line'>
</span><span class='line'>  def error(msg)
</span><span class='line'>    Exchange.instance.sendMsg(msg, 'error')
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  def info(msg)
</span><span class='line'>    Exchange.instance.sendMsg(msg, 'info')
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>In my domain class:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Tip &lt; ActiveRecord::Base
</span><span class='line'>
</span><span class='line'>  module ErrorMixin
</span><span class='line'>  
</span><span class='line'>  self.get_random
</span><span class='line'>
</span><span class='line'>  ...</span></code></pre></td></tr></table></div></figure>


<p>When I tried this, it didn&#8217;t work. What was the issue? It turned out that because in my module I call out to the class method get_random and that class methods can&#8217;t reference module methods.</p>

<p>The solution:</p>

<p>Simply replace the keyword include to extend instead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress: Modify the default new post POST action.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/04/octopress-modify-the-default-new-post-post-action/"/>
    <updated>2013-02-04T20:16:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/04/octopress-modify-the-default-new-post-post-action</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A new beginning. Tommy's blog site gets a new backend.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/02/a-new-beginning-tommys-blog-site-gets-a-new-backend/"/>
    <updated>2013-02-02T13:29:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/02/a-new-beginning-tommys-blog-site-gets-a-new-backend</id>
    <content type="html"><![CDATA[<p>Welcome to my new blog site! I&#8217;m excited to annouce my new site, www.tommytcchan.com after coming to the realization that the current system I have in place (Blogger on the web) doesn&#8217;t cater to my needs as a blogging developer. To check out my old posts (all 100+ of them), please visit tommytcchan.blogspot.com</p>
]]></content>
  </entry>
  
</feed>
