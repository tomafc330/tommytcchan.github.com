<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tommy Chan's software blog (@tommytcchan)]]></title>
  <link href="http://tommytcchan.github.com/atom.xml" rel="self"/>
  <link href="http://tommytcchan.github.com/"/>
  <updated>2013-03-04T21:18:37-08:00</updated>
  <id>http://tommytcchan.github.com/</id>
  <author>
    <name><![CDATA[Tommy Chan (informotion software)]]></name>
    <email><![CDATA[tommytcchan@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails: correct way of before_save in model]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/03/01/rails-correct-way-of-before-save-in-model/"/>
    <updated>2013-03-01T19:09:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/03/01/rails-correct-way-of-before-save-in-model</id>
    <content type="html"><![CDATA[<p>So I was reading a tutorial on the before_save and thought this was a valid syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  def before_save(record)
</span><span class='line'>
</span><span class='line'>    if record.publishing
</span><span class='line'>      Tip.find_all_by_publishing(true).each do |publishing_tip|
</span><span class='line'>        publishing_tip.publishing = false
</span><span class='line'>        publishing_tip.published = true
</span><span class='line'>        publishing_tip.save
</span><span class='line'>      end
</span><span class='line'>    end</span></code></pre></td></tr></table></div></figure>


<p>Turned out that this is the valid syntax for Rails 3.1:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  before_save :update_publishing_state
</span><span class='line'>
</span><span class='line'>  def update_publishing_state
</span><span class='line'>    if self.publishing
</span><span class='line'>      Tip.find_all_by_publishing(true).each do |publishing_tip|
</span><span class='line'>        publishing_tip.publishing = false
</span><span class='line'>        publishing_tip.published = true
</span><span class='line'>        publishing_tip.save
</span><span class='line'>      end
</span><span class='line'>    end
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache2: Negotiation: discovered file(s) matching request: ...yi (None could be negotiated)]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/28/apache2-negotiation-discovered-file-s-matching-request-dot-dot-dot-yi-none-could-be-negotiated/"/>
    <updated>2013-02-28T20:32:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/28/apache2-negotiation-discovered-file-s-matching-request-dot-dot-dot-yi-none-could-be-negotiated</id>
    <content type="html"><![CDATA[<p>I received this message in my apache logs while accessing a rewrite on PHP 5.4:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[Thu Feb 28 20:29:44 2013] [error] [client 127.0.0.1] Negotiation: discovered file(s) matching request: /home/ad/repo/yii/backend (None could be negotiated).</span></code></pre></td></tr></table></div></figure>


<p>It turned out that I needed to add an extra type defn for PHP 5.4:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>AddType application/x-httpd-php .php</span></code></pre></td></tr></table></div></figure>


<p>source: http://serverfault.com/questions/372733/apache-file-negotiation-failed</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache2: hosting sever from a user directory requires x7x permission]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/28/apache2-hosting-sever-from-a-user-directory-requires-x7x-permission/"/>
    <updated>2013-02-28T20:07:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/28/apache2-hosting-sever-from-a-user-directory-requires-x7x-permission</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been experimenting running a webapp in a a directory where I host my code, and in order for the server to read the dir, the base directory had to be x7x, such as</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo chmod 774 repo</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CSS: margin-top selector not working.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/28/css-image-not-aligning-quite-right/"/>
    <updated>2013-02-28T14:51:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/28/css-image-not-aligning-quite-right</id>
    <content type="html"><![CDATA[<h3>The problem:</h3>

<p>So I&#8217;m trying to set margin-top on a div that contains an image:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;div class="affiliate-logo"&gt;&lt;a href="http://www.gamechannel.de"&gt;&lt;img src="http://tommytcchan.github.com/logo.png"&gt;&lt;/a&gt;&lt;/div&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>.affiliate-logo {
</span><span class='line'>    margin-top: 15px;
</span><span class='line'>    text-align: center;
</span><span class='line'>}
</span></code></pre></td></tr></table></div></figure>


<p>However, the margin-top didn&#8217;t work at all for whatever value I put in.</p>

<h3>The solution:</h3>

<p>Turns out that you have to float the div and make that 100% width in order for the margin-top to kick in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.affiliate-logo {
</span><span class='line'>    float: left;
</span><span class='line'>    margin-top: 15px;
</span><span class='line'>    text-align: center;
</span><span class='line'>    width: 100%;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache: SSL error: (98)Address already in use: make_sock: could not bind to address 0.0.0.0:443]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/26/apache-ssl-error-98-address-already-in-use-make-sock-could-not-bind-to-address-0-dot-0-0-dot-0-443/"/>
    <updated>2013-02-26T17:49:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/26/apache-ssl-error-98-address-already-in-use-make-sock-could-not-bind-to-address-0-dot-0-0-dot-0-443</id>
    <content type="html"><![CDATA[<p>So I&#8217;m now configuring SSL with my new httpd server, and for some reason it kept giving me this error when I first started the server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(98)Address already in use: make_sock: could not bind to address 0.0.0.0:443</span></code></pre></td></tr></table></div></figure>


<p>But I did an <code>lsof -i :443</code> and I didn&#8217;t see anything.</p>

<h3>The solution</h3>

<p>Turns out that I forgotten that Ubuntu&#8217;s setup for httpd is a little non standard, in that they included a ports.conf file that includes a conditional which will start listening on port 443 if the ssl mod is enabled. I had also included a <code>listen 443</code> in my configuration, which led to the problem.</p>

<p>Removing the <code>listen 443</code> in my declaration solved the problem.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Apache: Setting up rewrite rules for a server in Ubuntu 12.10]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/26/apache-setting-up-rewrite-rules-for-a-server-in-ubuntu-12-dot-10/"/>
    <updated>2013-02-26T15:26:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/26/apache-setting-up-rewrite-rules-for-a-server-in-ubuntu-12-dot-10</id>
    <content type="html"><![CDATA[<h3>Introduction</h3>

<p>So I was configuring a Java app today, trying to get it deployed on httpd using ajp on Ubuntu. However, there was twist to it, and it is that the /static resources would have to point to a local file system folder (checked out with SCM).</p>

<p>I&#8217;m going to document how this is done on Ubuntu since it was somewhat of a painful process.</p>

<h3>Setup</h3>

<p>I had apache2 install via <code>apt-get</code>. The next step was to configure the apache2 server. The first thing needed was to specify the directory where the /static path resources will look in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Directory "~/web-assets"&gt;
</span><span class='line'>    Options Indexes FollowSymLinks
</span><span class='line'>    AllowOverride None
</span><span class='line'>    Order allow,deny
</span><span class='line'>    Allow from all
</span><span class='line'>&lt;/Directory&gt;</span></code></pre></td></tr></table></div></figure>


<p>The next thing to do is to set up the ajp port.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;VirtualHost *:80&gt;
</span><span class='line'>  ...
</span><span class='line'>  
</span><span class='line'>  ProxyPass           /           ajp://localhost:8010/
</span><span class='line'>  ProxyPassReverse    /           ajp://localhost:8010/
</span><span class='line'>
</span><span class='line'>  ProxyPreserveHost On
</span><span class='line'>
</span><span class='line'>  ...
</span><span class='line'>      
</span><span class='line'>&lt;/VirtualHost&gt;</span></code></pre></td></tr></table></div></figure>


<p>We then need to set up the rewrite rule:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(...same VirtualHost declaration...)
</span><span class='line'>RewriteRule       ^/static/\d+/(.*)                               %{DOCUMENT_ROOT}/world/$1       [L,E=STATIC_ASSET:1]
</span><span class='line'>RewriteRule       ^/static/(.*)                                   %{DOCUMENT_ROOT}/world/$1       [L,E=STATIC_ASSET:1]
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>It&#8217;s also good to have logging:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(...same VirtualHost declaration...)
</span><span class='line'># logging
</span><span class='line'>RewriteLog "/home/tchan/logs/rewrite.log"
</span><span class='line'>RewriteLogLevel 3
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>Now enable the mods (using a2enmod):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>a2enmod proxy
</span><span class='line'>a2enmod rewrite
</span><span class='line'>a2enmod ssl</span></code></pre></td></tr></table></div></figure>


<p>You might not need proxy or ssl but I did.</p>

<p>The next thing you need to do is to set up the permissions on your folder:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd ~/web-assets
</span><span class='line'>chmod a=rwx -R *</span></code></pre></td></tr></table></div></figure>


<p>Note that if your location is somewhere else you might need to give the same permission to the parent of the folder that apache is looking it.
Also note that you can add the www-data user to the group that has the permission in your file system if you are hesitate to make that directory global.</p>

<p>Once you have it configured, all you need then is to configure you Java app to use the port 8010 defined above:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Connector port="8010" protocol="AJP/1.3" redirectPort="8443"/&gt;</span></code></pre></td></tr></table></div></figure>


<p>One last thing: I had to change the deploy context of the Java app from /app to / (root):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>  &lt;Context docBase="my-app" path="/" reloadable="true" source="org.eclipse.jst.j2ee.server:my-app"/&gt;&lt;/Host&gt;</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: create a deploy script with ease]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/23/rails-create-a-deploy-script-with-ease/"/>
    <updated>2013-02-23T16:51:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/23/rails-create-a-deploy-script-with-ease</id>
    <content type="html"><![CDATA[<p>I was finding myself having to deploy manually everytime I push something to github, so I&#8217;ve decided to write a deploy shell script to help with this task. Coming from a Java background, I found that creating a deploy script for rails is so much easier. Here is the meat of it:</p>

<p>In deploy.sh</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#!/bin/bash
</span><span class='line'>#first kill the server if its running
</span><span class='line'>kill -9 `lsof -i :80 | awk '{if (NR!=1) {print $2}}'`
</span><span class='line'>pushd ~/codetipdaily
</span><span class='line'>#then pull from gh
</span><span class='line'>git pull origin master
</span><span class='line'>#assets
</span><span class='line'>rake assets:clean
</span><span class='line'>rake assets:precompile
</span><span class='line'>#start server as daemon
</span><span class='line'>rails server -e production -p 80 --daemon
</span><span class='line'>popd</span></code></pre></td></tr></table></div></figure>


<p>That was a piece of cake!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails: production environment is missing application.js and application.css]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/23/rails-production-environment-is-missing-application-dot-js-and-application-dot-css/"/>
    <updated>2013-02-23T16:03:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/23/rails-production-environment-is-missing-application-dot-js-and-application-dot-css</id>
    <content type="html"><![CDATA[<h3>The problem</h3>

<p>So I&#8217;m working on deploying my rails app to production, but I was seeing some weirdness when I ran it in production mode. Firstly, the application resources pointed to application.js and application.css even though my template was not change (ie. <code> &lt;%= stylesheet_link_tag    "application", :media =&gt; "all" %&gt;</code> and <code> &lt;%= javascript_include_tag "application" %&gt;</code>. That led to me believe something was wrong. In addition, when I ran <code>rake assets:precompile</code>, nothing was generated to the <code>public/assets</code> folder.</p>

<h3>What was wrong</h3>

<p>I checked my application.rb, and the <code>config.assets.enabled</code> was set to <code>true</code>. Then I realized that when I first created the app, I turned off that setting in <code>production.rb</code>. Simply turning it back on allowed the compilation of assets and leading rails to resolve to the right path (and not application.js/css).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grails and Intellij: discard old dependencies]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/22/grails-and-intellij-discard-old-dependencies/"/>
    <updated>2013-02-22T10:36:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/22/grails-and-intellij-discard-old-dependencies</id>
    <content type="html"><![CDATA[<p>So I&#8217;m working on a project that relies on a custom plugin, and it was listed as a dependency. However, I wanted it to reference a relative path instead. This was what was listed originally:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>In BuildConfig.groovy
</span><span class='line'>...
</span><span class='line'>  plugins {
</span><span class='line'>      test ":code-coverage:1.2.5"
</span><span class='line'>      test ":spock:0.7"
</span><span class='line'>      compile ":hibernate:2.0.0"
</span><span class='line'>      compile ":quartz:1.0-RC2"
</span><span class='line'>      compile ":rest:0.7"
</span><span class='line'>      compile ":springcache:1.3.1"
</span><span class='line'>          compile ":mycustomplugin:1.0"
</span><span class='line'>  }
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>In order to make it use your project relative project mycustomplugin (instead of fetching it from Archiva using maven), perform the following steps:</p>

<ol>
<li>Change your BuildConfig.groovy &#8211; remove the above decl in the plugins block.</li>
<li>Update your BuildConfig.groovy to add the following:</li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grails.plugin.location.'mycustomplugin' = "../mycustomplugin"</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Run <code>grails refresh-dependencies</code> in Intellij</li>
</ol>


<p>Once it refreshes then you should be able to reference the plugin in your source tree rather than from remote.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP - Set up XDebug]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/17/php-set-up-xdebug/"/>
    <updated>2013-02-17T16:24:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/17/php-set-up-xdebug</id>
    <content type="html"><![CDATA[<p>So my client is using an older version of PHP (5.2 to be exact), and I wanted to install a debugger to ensure that I can test out the flows and examine variables. Finally after an hour of fiddling with it I got it to work.</p>

<h3>The setup</h3>

<p>This guide uses the following:</p>

<p>WAMP Server 2.2
PHP 5.2
Apache 2.2
PHPStorm 5.0.1</p>

<h3>Steps</h3>

<ol>
<li><p>Goto http://xdebug.org/download.php and download the Xdebug version 2.1.2. Note that&#8217;s the last version where they compiled a VC6 version. I got the Thread Safe (TS) version.</p></li>
<li><p>Now edit your php.ini file. Make sure to put the following in:</p></li>
</ol>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zend_extension_ts= "C:\wamp\bin\php\php5.2.2\ext\php_xdebug-2.1.2-5.2-vc6.dll"
</span><span class='line'>xdebug.idekey=PHPSTORM
</span><span class='line'>xdebug.remote_enable=true
</span><span class='line'>;extension=php_xdebug-2.1.2-5.2-vc6.dll</span></code></pre></td></tr></table></div></figure>


<p>`
Note that we explicitly removed the extension= declaration. We <em>don&#8217;t</em> want it.</p>

<ol>
<li><p>Now grab the bookmarklet generator from here: http://www.jetbrains.com/phpstorm/marklets/</p></li>
<li><p>Restart the server</p></li>
<li><p>Have PHPStorm start listening to the connections.</p></li>
<li><p>Put a breakdown somethere you know that the execution will hit it.</p></li>
<li><p>Enjoy!</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovy: unit testing method overridding using metaClass does not work]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/15/groovy-unit-testing-method-overridding-using-metaclass-does-not-work/"/>
    <updated>2013-02-15T16:04:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/15/groovy-unit-testing-method-overridding-using-metaclass-does-not-work</id>
    <content type="html"><![CDATA[<p>So I am devoting my whole afternoon writing unit tests for one of our projects at work and I was stuck on why overridding methods using the metaClass mechanism doesn&#8217;t work. Consider this code:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>private void registerSuccessAction(RegistrationFormCommand cmd, userId) {
</span><span class='line'>      def successUrl = '/register/success'
</span><span class='line'>      ...
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>This was in my test</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>  controller.metaClass.registerSuccessAction = { command, userId -&gt;
</span><span class='line'>      println "called"
</span><span class='line'>                      }
</span><span class='line'>
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>However, I was runing into the fact that my overridding method isn&#8217;t being called. What gives?</p>

<p>It turned out that you <em>need</em> to qualify the first command with the type if the method has a typed parameter, otherwise groovy won&#8217;t override the behavior!</p>

<p>This works:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>controller.metaClass.registerSuccessAction = { RegistrationFormCommand command, userId -&gt;
</span><span class='line'>          throw new AssertionError("This should not be called.")
</span><span class='line'>                  }
</span></code></pre></td></tr></table></div></figure>


<p>`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing installing mysql2 gem in Ubuntu 12.10]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/13/fixing-installing-mysql2-gem-in-ubuntu-12-dot-10/"/>
    <updated>2013-02-13T20:59:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/13/fixing-installing-mysql2-gem-in-ubuntu-12-dot-10</id>
    <content type="html"><![CDATA[<p>So I&#8217;ve decided to host my new creation on a VPS instead of using a PAAS like Heroku or Appfog. The main drawback &#8211; I don&#8217;t have control over the environment, which in the Rails case is very annoying. Apparently you can specify the ruby version but I gave up after I tried all the stops.</p>

<p>Anyways I was setting up my server (using Ubuntu) and when I was doing <code>bundle install</code> it gave me a weird error:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*** extconf.rb failed ***
</span><span class='line'>Could not create Makefile due to some reason, probably lack of
</span><span class='line'>necessary libraries and/or headers.  Check the mkmf.log file for more
</span><span class='line'>details.  You may need configuration options.</span></code></pre></td></tr></table></div></figure>


<p>After digging into it a little bit, it was found that my server doesn&#8217;t have the dev package <strong>libmysqlclient-dev</strong></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install libmysqlclient-dev mysql-server</span></code></pre></td></tr></table></div></figure>


<p>After doing that and then trying to install</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install mysql2</span></code></pre></td></tr></table></div></figure>


<p>everything worked.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails: Can't use the include keyword in model]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/05/ruby-on-rails-cant-use-the-include-keyword-in-model/"/>
    <updated>2013-02-05T21:30:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/05/ruby-on-rails-cant-use-the-include-keyword-in-model</id>
    <content type="html"><![CDATA[<p>I&#8217;m building the backend of my current project using rails, and one of the things I wanted to do was create a module that I can use in both my controller and model to report issues to a messaging queue, but I was stuck with on the following:</p>

<p>In error_mixin:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>module ErrorMixin
</span><span class='line'>
</span><span class='line'>  def error(msg)
</span><span class='line'>    Exchange.instance.sendMsg(msg, 'error')
</span><span class='line'>  end
</span><span class='line'>
</span><span class='line'>  def info(msg)
</span><span class='line'>    Exchange.instance.sendMsg(msg, 'info')
</span><span class='line'>  end
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>In my domain class:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Tip &lt; ActiveRecord::Base
</span><span class='line'>
</span><span class='line'>  module ErrorMixin
</span><span class='line'>  
</span><span class='line'>  self.get_random
</span><span class='line'>
</span><span class='line'>  ...</span></code></pre></td></tr></table></div></figure>


<p>When I tried this, it didn&#8217;t work. What was the issue? It turned out that because in my module I call out to the class method get_random and that class methods can&#8217;t reference module methods.</p>

<p>The solution:</p>

<p>Simply replace the keyword include to extend instead.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress: Modify the default new post POST action.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/04/octopress-modify-the-default-new-post-post-action/"/>
    <updated>2013-02-04T20:16:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/04/octopress-modify-the-default-new-post-post-action</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A new beginning. Tommy's blog site gets a new backend.]]></title>
    <link href="http://tommytcchan.github.com/blog/2013/02/02/a-new-beginning-tommys-blog-site-gets-a-new-backend/"/>
    <updated>2013-02-02T13:29:00-08:00</updated>
    <id>http://tommytcchan.github.com/blog/2013/02/02/a-new-beginning-tommys-blog-site-gets-a-new-backend</id>
    <content type="html"><![CDATA[<p>Welcome to my new blog site! I&#8217;m excited to annouce my new site, www.tommytcchan.com after coming to the realization that the current system I have in place (Blogger on the web) doesn&#8217;t cater to my needs as a blogging developer. To check out my old posts (all 100+ of them), please visit tommytcchan.blogspot.com</p>
]]></content>
  </entry>
  
</feed>
